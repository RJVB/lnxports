# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0
PortGroup       conflicts_build 1.0
PortGroup       LTO 1.0
PortGroup       save_configure_cmd 1.0
PortGroup       locale_select 1.0

name            glibc
set baseversion 2.29
set urev        3
set thePrefix   /opt/glibc/${baseversion}
version         ${baseversion}.${urev} ; revision 1
description     The GNU C library
long_description \
                The GNU C library. Corresponds to the following Ubuntu packages: \
                libc-bin libc6 and their -dev packages.\n\
                NB this port is EXPERIMENTAL and should be installed ONLY as the very FIRST port to be installed. \
                Even then it is likely that it will be extremely complicated to mix libraries from MacPorts \
                with libraries from the host. For that reason this port installs only when you confirm having \
                read this by setting one of the two variants.

variant opt_libc conflicts I_read_the_info description "Install into ${thePrefix}" {}
variant I_read_the_info conflicts opt_libc description "use this variant to signal that you read `port info ${name}`" {}
if {![variant_isset opt_libc]} {
    # correct!
    set thePrefix ${prefix}
    pre-fetch {
        if {![variant_isset I_read_the_info]} {
            ui_error "Please confirm that you read `port info ${name}` by setting the +I_read_the_info variant"
            return -code error "User didn't follow the instructions"
        }
    }
} else {
    long_description-append \n\
                Overload the used library with\n\
${thePrefix}/lib/ld-${baseversion}.so /path/to/command \[args\]
    configure.pre_args-replace \
        --prefix=${prefix} \
        --prefix=${thePrefix}
    langselect_prefix \
        ${thePrefix}
}

homepage        https://launchpad.net/ubuntu/+source/${name}
license         GPL-2
platforms       linux

master_sites    https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/glibc/${baseversion}-0ubuntu${urev}/
use_xz          yes
distname        ${name}_${baseversion}.orig
checksums       rmd160  7255de9fe091cc825d73854f2c3ddd598c63abe2 \
                sha256  9e383319f5cdb1a9d58a45ea44836c23859b8d580d5748cd93bca35a01ad0669
worksrcdir      ${name}-${baseversion}

# Ubuntu's patches:
patch.pre_args  -Np1
    #kfreebsd/local-fbtl.diff 
patchfiles-append \
    git-updates.diff \
    locale/check-unknown-symbols.diff \
    locale/locale-print-LANGUAGE.diff \
    locale/LC_IDENTIFICATION-optional-fields.diff \
    localedata/sort-UTF8-first.diff \
    localedata/supported.diff \
    localedata/locale-eu_FR.diff \
    localedata/locale-ku_TR.diff \
    localedata/fo_FO-date_fmt.diff \
    localedata/locales-fr.diff \
    localedata/locale-en_DK.diff \
    localedata/locale-zh_TW.diff \
    localedata/tailor-iso14651_t1.diff \
    localedata/submitted-bz9725-locale-sv_SE.diff \
    localedata/locale-C.diff \
    localedata/submitted-en_AU-date_fmt.diff \
    localedata/submitted-es_MX-decimal_point.diff \
    i386/local-biarch.diff \
    i386/unsubmitted-quiet-ldconfig.diff \
    kfreebsd/submitted-waitid.diff \
    kfreebsd/submitted-auxv.diff \
    kfreebsd/local-config_h_in.patch \
    kfreebsd/local-grantpt.diff \
    kfreebsd/local-sysdeps.diff \
    kfreebsd/local-fbtl-depends.diff \
    kfreebsd/local-scripts.diff \
    kfreebsd/local-getaddrinfo-freebsd-kernel.diff \
    kfreebsd/local-no-execfn.diff \
    all/local-alias-et_EE.diff \
    all/local-remove-manual.diff \
    all/local-ru_RU.diff \
    all/local-ldd.diff \
    all/local-nis-shadow.diff \
    all/submitted-po-fr-fixes.diff \
    any/local-rtlddir-cross.diff \
    any/local-asserth-decls.diff \
    any/local-bindresvport_blacklist.diff \
    any/local-fhs-linux-paths.diff \
    any/local-fhs-nscd.diff \
    any/local-ld-multiarch.diff \
    any/local-ldso-disable-hwcap.diff \
    any/local-ldconfig.diff \
    any/local-nss-upgrade.diff \
    any/local-stubs_h.diff \
    any/local-tcsetaddr.diff \
    any/local-nss-overflow.diff \
    any/submitted-missing-etc-hosts.diff \
    any/submitted-bits-fcntl_h-at.diff \
    any/submitted-nptl-invalid-td.patch \
    any/local-ldconfig-multiarch.diff \
    any/local-disable-libnss-db.diff \
    any/local-revert-bz13979.diff \
    any/local-tst-eintr1-eagain.diff \
    any/unsubmitted-ldso-machine-mismatch.diff \
    any/unsubmitted-dlopen-static-crash.diff \
    any/local-ldconfig-ignore-ld.so.diff \
    any/local-libpic.diff \
    any/local-bootstrap-headers.diff \
    any/submitted-resolv-unaligned.diff \
    any/local-cudacc-float128.diff \
    any/git-libio-stdout-putc.diff \
    ubuntu/local-altlocaledir.diff \
    ubuntu/local-disable-ld_audit.diff \
    ubuntu/local-disable-nscd-netgroup-caching.diff \
    ubuntu/submitted-no-sprintf-pre-truncate.diff \
    ubuntu/localedata/ckb_IQ-new_locale.diff \
    ubuntu/localedata/en_IE-am_pm.diff \
    ubuntu/localedata/eo_US.diff \
    ubuntu/localedata/es_DO-am_pm.diff \
    ubuntu/localedata/lv_LV-currency.diff \
    ubuntu/localedata/sd_PK.diff \
    ubuntu/localedata/ug_CN@latin.diff

configure.dir   ${workpath}/build
build.dir       ${configure.dir}
configure.cmd   ${worksrcpath}/configure
# our own gmake hangs on the stdio_common subdir?!
#build.cmd       gmake
build.post_args-append \
                -k PARALLELMFLAGS=-j${build.jobs}
destroot.post_args-append \
                -k -j${build.jobs} PARALLELMFLAGS=-j${build.jobs}

# set MAKEINFO to prevent build failures because of local-remove-manual.patch
# If Ubuntu cannot distribute the manual for licensing reasons we'd probably
# better not try either (and it's a **** to build anyway).
configure.env-append \
                MAKEINFO=:
build.env-append \
                MAKEINFO=:

configure.args-append \
                --without-selinux \
                --enable-stackguard-randomization \
                --enable-stack-protector=strong \
                --enable-obsolete-rpc \
                --enable-obsolete-nsl \
                --with-pkgversion="LinuxPorts GLIBC ${version}" \
                --disable-static-pie --enable-cet --enable-systemtap \
                --enable-rpath

platform linux {
    configure.ldflags-append -Wl,-rpath=${prefix}/lib -Wl,--dynamic-linker=${thePrefix}/lib/ld-${baseversion}.so
    build.env-append LDFLAGS=-Wl,-rpath=${prefix}/lib -Wl,--dynamic-linker=${thePrefix}/lib/ld-${baseversion}.so
    destroot.env-append LDFLAGS=-Wl,-rpath=${prefix}/lib -Wl,--dynamic-linker=${thePrefix}/lib/ld-${baseversion}.so
    if {[variant_isset opt_libc]} {
        configure.ldflags-append -Wl,-rpath=${thePrefix}/lib -L${thePrefix}/lib
        build.env-append LDFLAGS=-Wl,-rpath=${thePrefix}/lib -L${thePrefix}/lib
        destroot.env-append LDFLAGS=-Wl,-rpath=${thePrefix}/lib -L${thePrefix}/lib
        destroot.violate_mtree yes
    }
    configure.ldflags-delete -Wl,--enable-new-dtags
}

####################
PortGroup devport 1.0
####################

create_devport port:${name}

if {[is_mainport]} {

    depends_build-append \
                port:patchelf
    conflicts_build-append \
                gettext-dev

    post-destroot {
        # ld.so does not want to have an RPATH set"
        system "patchelf --remove-rpath ${destroot}${thePrefix}/lib/ld-${baseversion}.so"

        # this is provided by port:gettext-dev
        file delete ${destroot}${thePrefix}/include/libintl.h
        # provided by port:libiconv-dev
        file delete ${destroot}${thePrefix}/include/iconv.h
        # provided by port:libiconv
        file delete ${destroot}${thePrefix}/bin/iconv

        xinstall ${worksrcpath}/debian/local/etc/ld.so.conf ${destroot}${thePrefix}/etc/
        reinplace "s|/etc|${thePrefix}/etc|g" ${destroot}${thePrefix}/etc/ld.so.conf
        xinstall -m 755 -d ${destroot}${thePrefix}/etc/ld.so.conf.d
        xinstall {*}[glob ${worksrcpath}/debian/local/etc/ld.so.conf.d/*] ${destroot}${thePrefix}/etc/ld.so.conf.d/
        foreach c [glob -nocomplain /etc/ld.so.conf.d/*] {
            if {![file exists ${destroot}${thePrefix}/etc/ld.so.conf.d/[file tail ${c}]]} {
                ln -s ${c} ${destroot}${thePrefix}/etc/ld.so.conf.d/
            }
        }
        system "echo ${thePrefix}/lib > ${destroot}${thePrefix}/etc/ld.so.conf.d/000-port:${subport}.conf"
        file rename ${destroot}${thePrefix}/etc/ld.so.cache ${destroot}${thePrefix}/etc/ld.so.cache.stock

        ####################
        register_devport_standard_content
        append_to_devport_standard_content ${thePrefix}/lib/*.map ${thePrefix}/lib/*.o ${thePrefix}/lib/libc.so ${thePrefix}/lib/libm.so
#         append_to_devport_standard_content ${thePrefix}/lib/*.o
        # these are ASCII file "links" that should also go into the -dev port
#         devport_content-append ${thePrefix}/lib/libc.so ${thePrefix}/lib/libm.so
        create_devport_content_archive
        ####################
    }
    post-activate {
        if {[variant_isset opt_libc]} {
            if {![file exists ${thePrefix}/etc/ld.so.cache]} {
                file rename ${thePrefix}/etc/ld.so.cache.stock ${thePrefix}/etc/ld.so.cache
                ui_msg "Current ${thePrefix}/etc/ld.so.cache contents (check the reported path!!):"
                ui_msg "[exec ${thePrefix}/sbin/ldconfig -v -p]"
                ui_warn "You will need to run `${thePrefix}/sbin/ldconfig \[-v\]` after ensuring that this will not mess up your /etc/ld.so.cache!!"
                ui_msg "A safe way to do that is to 'give' ${prefix}/etc to a non-root admin account"
            } else {
                ui_warn "You will probable need to re-run `${thePrefix}/sbin/ldconfig \[-v\]` after ensuring that this will not mess up your /etc/ld.so.cache!!"
                ui_msg "A safe way to do that is to 'give' ${prefix}/etc to a non-root admin account"
            }
        }
    }
}
