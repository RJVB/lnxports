diff --git a/common/flatpak-run.c b/common/flatpak-run.c
index 82768bb1..ded8f7d7 100644
--- a/common/flatpak-run.c
+++ b/common/flatpak-run.c
@@ -298,43 +298,7 @@ flatpak_run_add_environment_args (FlatpakBwrap    *bwrap,
                               "--dev-bind", "/dev", "/dev",
                               NULL);
       /* Don't expose the host /dev/shm, just the device nodes, unless explicitly allowed */
-      if (g_file_test ("/dev/shm", G_FILE_TEST_IS_DIR))
-        {
-          if (context->devices & FLATPAK_CONTEXT_DEVICE_SHM)
-            {
-              /* Don't do anything special: include shm in the
-               * shared /dev. The host and all sandboxes and subsandboxes
-               * all share /dev/shm */
-            }
-          else if ((context->features & FLATPAK_CONTEXT_FEATURE_PER_APP_DEV_SHM)
-                   && per_app_dir_lock_fd >= 0)
-            {
-              g_autofree char *shared_dev_shm = NULL;
-
-              /* The host and the original sandbox have separate /dev/shm,
-               * but we want other instances to be able to share /dev/shm with
-               * the first sandbox (except for subsandboxes run with
-               * flatpak-spawn --sandbox, which will have their own). */
-              if (!flatpak_instance_ensure_per_app_dev_shm (app_id,
-                                                            per_app_dir_lock_fd,
-                                                            &shared_dev_shm,
-                                                            error))
-                return FALSE;
-
-              flatpak_bwrap_add_args (bwrap,
-                                      "--bind", shared_dev_shm, "/dev/shm",
-                                      NULL);
-            }
-          else
-            {
-              /* The host, the original sandbox and each subsandbox
-               * each have a separate /dev/shm. */
-              flatpak_bwrap_add_args (bwrap,
-                                      "--tmpfs", "/dev/shm",
-                                      NULL);
-            }
-        }
-      else if (g_file_test ("/dev/shm", G_FILE_TEST_IS_SYMLINK))
+      if (g_file_test ("/dev/shm", G_FILE_TEST_IS_SYMLINK))
         {
           g_autofree char *link = flatpak_readlink ("/dev/shm", NULL);
 
@@ -377,6 +341,42 @@ flatpak_run_add_environment_args (FlatpakBwrap    *bwrap,
           else
             g_warning ("Unexpected /dev/shm symlink %s", link);
         }
+      else if (g_file_test ("/dev/shm", G_FILE_TEST_IS_DIR))
+        {
+          if (context->devices & FLATPAK_CONTEXT_DEVICE_SHM)
+            {
+              /* Don't do anything special: include shm in the
+               * shared /dev. The host and all sandboxes and subsandboxes
+               * all share /dev/shm */
+            }
+          else if ((context->features & FLATPAK_CONTEXT_FEATURE_PER_APP_DEV_SHM)
+                   && per_app_dir_lock_fd >= 0)
+            {
+              g_autofree char *shared_dev_shm = NULL;
+
+              /* The host and the original sandbox have separate /dev/shm,
+               * but we want other instances to be able to share /dev/shm with
+               * the first sandbox (except for subsandboxes run with
+               * flatpak-spawn --sandbox, which will have their own). */
+              if (!flatpak_instance_ensure_per_app_dev_shm (app_id,
+                                                            per_app_dir_lock_fd,
+                                                            &shared_dev_shm,
+                                                            error))
+                return FALSE;
+
+              flatpak_bwrap_add_args (bwrap,
+                                      "--bind", shared_dev_shm, "/dev/shm",
+                                      NULL);
+            }
+          else
+            {
+              /* The host, the original sandbox and each subsandbox
+               * each have a separate /dev/shm. */
+              flatpak_bwrap_add_args (bwrap,
+                                      "--tmpfs", "/dev/shm",
+                                      NULL);
+            }
+        }
     }
   else
     {
