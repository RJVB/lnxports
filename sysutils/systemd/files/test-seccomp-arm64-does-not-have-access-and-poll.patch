From: =?utf-8?q?Zbigniew_J=C4=99drzejewski-Szmek?= <zbyszek@in.waw.pl>
Date: Sat, 15 Jul 2017 19:30:48 +0000
Subject: test-seccomp: arm64 does not have access() and poll()

glibc uses faccessat and ppoll, so just add a filters for that.

(cherry picked from commit abc0213839fef92e2e2b98a434914f22ece48490)
(cherry picked from commit f60a865a496e1e6fde7436b4013dd8ff677f29a1)
---
 src/test/test-seccomp.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/test/test-seccomp.c b/src/test/test-seccomp.c
index 50fe24c..28fe206 100644
--- a/src/test/test-seccomp.c
+++ b/src/test/test-seccomp.c
@@ -529,7 +529,11 @@ static void test_load_syscall_filter_set_raw(void) {
                 assert_se(poll(NULL, 0, 0) == 0);
 
                 assert_se(s = set_new(NULL));
+#if SCMP_SYS(access) >= 0
                 assert_se(set_put(s, UINT32_TO_PTR(__NR_access + 1)) >= 0);
+#else
+                assert_se(set_put(s, UINT32_TO_PTR(__NR_faccessat + 1)) >= 0);
+#endif
 
                 assert_se(seccomp_load_syscall_filter_set_raw(SCMP_ACT_ALLOW, s, SCMP_ACT_ERRNO(EUCLEAN)) >= 0);
 
@@ -541,7 +545,11 @@ static void test_load_syscall_filter_set_raw(void) {
                 s = set_free(s);
 
                 assert_se(s = set_new(NULL));
+#if SCMP_SYS(poll) >= 0
                 assert_se(set_put(s, UINT32_TO_PTR(__NR_poll + 1)) >= 0);
+#else
+                assert_se(set_put(s, UINT32_TO_PTR(__NR_ppoll + 1)) >= 0);
+#endif
 
                 assert_se(seccomp_load_syscall_filter_set_raw(SCMP_ACT_ALLOW, s, SCMP_ACT_ERRNO(EUNATCH)) >= 0);
 
