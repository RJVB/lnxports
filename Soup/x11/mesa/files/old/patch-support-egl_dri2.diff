diff --git a/src/egl/drivers/dri2/egl_dri2.c b/src/egl/drivers/dri2/egl_dri2.c
index 2cab7d0..ab8b93f 100644
--- a/src/egl/drivers/dri2/egl_dri2.c
+++ b/src/egl/drivers/dri2/egl_dri2.c
@@ -59,6 +59,12 @@
 #include "loader/loader.h"
 #include "util/u_atomic.h"
 
+#ifdef __MACH__
+#include <mach/mach.h>
+#include <mach/mach_time.h>
+#include <sys/sysctl.h>
+#endif
+
 /* The kernel header drm_fourcc.h defines the DRM formats below.  We duplicate
  * some of the definitions here so that building Mesa won't bleeding-edge
  * kernel headers.
@@ -2637,8 +2643,10 @@ dri2_create_sync(_EGLDriver *drv, _EGLDisplay *dpy,
          return NULL;
       }
 
+#ifndef __MACH__
       /* change clock attribute to CLOCK_MONOTONIC */
       ret = pthread_condattr_setclock(&attr, CLOCK_MONOTONIC);
+#endif
 
       if (ret) {
          _eglError(EGL_BAD_ACCESS, "eglCreateSyncKHR");
@@ -2785,7 +2793,19 @@ dri2_client_wait_sync(_EGLDriver *drv, _EGLDisplay *dpy, _EGLSync *sync,
       } else {
          /* if reusable sync has not been yet signaled */
          if (dri2_sync->base.SyncStatus != EGL_SIGNALED_KHR) {
+#ifndef __MACH__
             clock_gettime(CLOCK_MONOTONIC, &current);
+#else
+		  static int calibrated = 0;
+		  static mach_timebase_info_data_t sTimebaseInfo;
+		  if (!calibrated) {
+			  mach_timebase_info(&sTimebaseInfo);
+			  calibrated = 1;
+		  }
+		  unsigned long long now = mach_absolute_time() * sTimebaseInfo.numer / sTimebaseInfo.denom;
+		  current.tv_sec = now / 1000000000;
+		  current.tv_nsec = now % 1000000000;
+#endif
 
             /* calculating when to expire */
             expire.nsec = timeout % 1000000000L;
@@ -2909,7 +2929,7 @@ dri2_load(_EGLDriver *drv)
 #ifdef HAVE_ANDROID_PLATFORM
    const char *libname = "libglapi.so";
 #elif defined(__APPLE__)
-   const char *libname = "libglapi.0.dylib";
+   const char *libname = "@PREFIX@/lib/libglapi.0.dylib";
 #elif defined(__CYGWIN__)
    const char *libname = "cygglapi-0.dll";
 #else
