# -*- coding: utf-8; mode: tcl; tab-width: 4; truncate-lines: t; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4

PortSystem          1.0

PortGroup           github 1.0
PortGroup           wxWidgets 1.0
PortGroup           conflicts_build 1.0
PortGroup           active_variants 1.1
PortGroup           LTO 1.0

platform darwin {
    if {${os.major} < 13} {
        PortGroup   cxx11 1.1
    }
}

name                audacity
conflicts           audacity-gtk

description         A Free, Cross-Platform Digital Audio Editor.
long_description    Audacity is a free, easy-to-use, multi-track audio editor and recorder \
                    for Windows, Mac OS X, GNU/Linux and other operating systems. The interface is translated \
                    into many languages. You can use Audacity to: \n\
                    Record live audio. \n\
                    Record computer playback on any Windows Vista or later machine. \n\
                    Convert tapes and records into digital recordings or CDs. \n\
                    Edit WAV, AIFF, FLAC, MP2, MP3 or Ogg Vorbis sound files. \n\
                    AC3, M4A/M4R (AAC), WMA and other formats supported using optional libraries. \n\
                    Cut, copy, splice or mix sounds together. \n\
                    Numerous effects including change the speed or pitch of a recording. \n\
                    And more!

subport             audacity-devel {
    long_description A port of the Audacity audio editor aimed at development purposes.
}


if {${subport} eq "${name}"} {
    conflicts       "${name}-devel"
    # get the source tarball from github because it contains all required external libs
    # incl. those not in MacPorts.
    #github.setup    audacity audacity 2.3.0 Audacity-
    # exceptionally we ship the same version as the devel port
    github.setup    audacity audacity 660b8c07ad63c83dc5f9d34f359bd4480e43f9eb
    version         2.3.2.361
    checksums       rmd160  00805ebb7d2a1cfb8685008c10fe1522b9e1b538 \
                    sha256  a9f9c70578444b1aa120f5e29a87f0f2bd1274dca145daa2119b761002ac9604
#                     size    62025555
    set PPREFIX     ./
} else {
    PortGroup       cmake 1.1
    conflicts       "${name}"
#     # git describe --tags : Audacity-2.3.2-752-gb3539ed2b
#     github.setup    audacity audacity 1c44a1e061022a75ad60e622ef529fe0736d755d
    # git describe --tags : Audacity-2.3.3-841-g310b5dea3
    github.setup    audacity audacity 310b5dea303a8add62d49fb88e3f3b3f8a2fe0a8
    version         2.3.3.841
    # this port is intended to facilitate development efforts shared with "upstreams"
    # so using git instead of a tarball fetch type is more appropriate.
    fetch.type      git
    distname        audacity-git
    set PPREFIX     devel/

    livecheck.type  none

    pre-build {
        # register the exact source version in the build:
        system -W ${worksrcpath}/mac "scripts/get_gitident.sh"
    }
    build.post_args-append -k
    cmake.save_configure_cmd "log too"
}

categories          audio

platforms           darwin
license             GPL-2+
maintainers         gmail.com:rjvbertin openmaintainer
universal_variant   no
use_parallel_build  yes

homepage            http://www.audacityteam.org/

# we want to use the temporary wxWidgets-3.1 "Audacity-special" port!
variant qt description {build against wxQt-3.2 (experimental!!)} {}
if {[variant_isset qt]} {
    wxWidgets.use   wxQt-3.2
} else {
    wxWidgets.use   wxWidgets-3.1
}

depends_lib-append  port:${wxWidgets.port}

if {![catch {set wxw_stdlib [active_variants ${wxWidgets.port} stdlib]} err]} {
    if {${wxw_stdlib}} {
        long_description-append "This port needs ${wxWidgets.port} without the +stdlib variant."
        pre-fetch {
            ui_error "This port needs ${wxWidgets.port} without the +stdlib variant."
            return -code error "reinstall port:${wxWidgets.port} without the +stdlib variant"
        }
    }
}

depends_build-append \
                    port:pkgconfig \
                    port:python27
# depends_lib-append  port:freetype \
#                     port:harfbuzz \
#                     port:libid3tag \
#                     port:libmad \
#                     port:soundtouch \
#                     port:soxr \
#                     port:twolame
depends_lib-append  port:expat \
                    path:lib/libavcodec.dylib:ffmpeg \
                    port:flac \
                    port:libogg \
                    port:libsndfile \
                    port:libvorbis
# audacity could use port:lv2 and port:lilv but would also require a port:suil for that to be possible.

patch.pre_args      -Np1

# address issues in the build system:
# - build and link VSTControlOSX.mm instead of the GTk interface
# - address a visibility issue with the slider_array variable in libnyquist
# - make the AudioUnits plugin support build; on 64bit and also include AUControl.mm
platform darwin {
    depends_build-append \
                    port:nasm

    patchfiles-append \
                    fix-minsrc-autoreconf.patch                             \
                    libvamp-Makefile-for-osx.diff                           \
                    src-Makefile-for-osx.diff                               \
                    portaudio-no-universal-build.diff                       \
                    ${PPREFIX}buildinfo-clarify-no-gstreamer.diff                     \
                    ${PPREFIX}patch-aboutdlg-compiler.diff                            \
                    add_enGB_translation.diff                               \
                    patch-more-decent-font-sizes.diff                       \
                    patch-python.diff                                       \
                    patch-libnyquist-symbol-visibility.diff \
                    patch-skip-gcc-version-test.diff
    if {${subport} eq "${name}"} {
        patchfiles-append \
                    patch-fix-audiounits.diff
    }
    # use lame from MacPorts (partial revert of ae431bc5)
    # load ffmpeg libs from MacPorts (reverts of 1d40f33e)
    patchfiles-append \
                    patch-use-MPlame.diff \
                    ${PPREFIX}patch-use-MPffmpeg.diff
    # reported upstream, patch accepted as the proper fix:
    patchfiles-append \
                    patch-unordered_map-fixes.diff
    # for building against wxWidgets 3.0.3 and up:
    patchfiles-append \
                    patch-wxw-303.diff
    # work around a missing implementation in wxCocoa's wxSound class
    patchfiles-append \
                    patch-implement-progdial=beep.diff
    patchfiles-append \
                    patch-WindowMenus-objcxx.diff
}
platform linux {
#     # this is likely to be true as long as we use the host's wxWidgets:
#     conflicts_build-append \
#                     tiff-dev
    patchfiles-append \
                    fix-minsrc-autoreconf.patch                             \
                    libvamp-Makefile-for-linux.diff                         \
                    ${PPREFIX}buildinfo-clarify-no-gstreamer.diff                     \
                    ${PPREFIX}patch-aboutdlg-compiler.diff                            \
                    add_enGB_translation.diff                               \
                    patch-avoid-clang-choke-on-confbase.diff                \
                    patch-rearrange-control-buttons.diff                    \
                    ${PPREFIX}patch-python-linux.diff                                 \
                    patch-libnyquist-symbol-visibility.diff \
                    patch-skip-gcc-version-test.diff
    if {${subport} eq "${name}"} {
        patchfiles-append \
                    patch-fix-audiounits.diff
    }
    # use lame from MacPorts (partial revert of ae431bc5)
    # load ffmpeg libs from MacPorts (reverts of 1d40f33e)
    patchfiles-append \
                    patch-use-MPlame.diff \
                    ${PPREFIX}patch-use-MPffmpeg.diff
    # strange C++ errors, why would upstream builds not be affected?
#     patchfiles-append \
#                     patch-unordered_map-fixes.diff
    # for building against wxWidgets 3.0.3:
    patchfiles-append \
                    patch-wxw-303.diff
#     set wxWidgets.wxconfig /usr/bin/wx-config
}
patchfiles-append   patch-no-libatomic.diff \
                    patch-wxw-31x.diff

if {${subport} eq "${name}"} {
    patchfiles-append \
                    patch-wxtreectl-hdr.diff
} else {
    patchfiles-append \
                    patch-cmakefiles.diff
}

if {[variant_isset qt]} {
    patchfiles-append \
                    patch-for-wxqt.diff
}

# pre-configure {
#     use_autoreconf  [expr ![file exists ${worksrcpath}/config.status]]
#     autoreconf.args -fvi --no-recursive
# }

if {${subport} eq "${name}"} {
    configure.args-append \
                    --disable-dependency-tracking \
                    --disable-quicktime \
                    --disable-static \
                    --disable-universal_binary \
                    --disable-audiounits \
                    --enable-shared \
                    --enable-sse \
                    --with-ffmpeg \
                    --with-lame \
                    --with-libflac \
                    --with-libmad \
                    --with-libsoxr \
                    --with-libvamp=local \
                    --with-libvorbis \
                    --with-lv2 \
                    --with-portmixer \
                    --with-sbsms=local \
                    --with-soundtouch \
                    --with-twolame \
                    --with-widgetextra=local \
                    --with-portmidi=system \
                    WX_CONFIG=${wxWidgets.wxconfig}
    platform darwin {
        # Since version 2.2.0 we need to use the embedded (modified) Portaudio version.
        configure.args-append \
                    --with-portaudio=local
    }
} else {
    set _OPT "audacity_"
    configure.args-append \
                    -DwxWidgets_CONFIG_EXECUTABLE=${wxWidgets.wxconfig} \
                    -D${_OPT}lib_preference=system \
                    -D${_OPT}use_audiounits=off \
                    -D${_OPT}use_pa_jack=off \
                    -D${_OPT}use_wxwidgets=system \
                    -D${_OPT}use_ffmpeg=linked \
                    -D${_OPT}use_lame=system \
                    -D${_OPT}use_flac=system \
                    -D${_OPT}use_mad=system \
                    -D${_OPT}use_soxr=system \
                    -D${_OPT}use_vamp=local \
                    -D${_OPT}use_ogg=system \
                    -D${_OPT}use_vorbis=system \
                    -D${_OPT}use_lv2=local \
                    -D${_OPT}use_sbsms=local \
                    -D${_OPT}use_soundtouch=system \
                    -D${_OPT}use_twolame=system \
                    -D${_OPT}use_midi=system
    configure.env-append \
                    WX_CONFIG=${wxWidgets.wxconfig}
    platform darwin {
        # Since version 2.2.0 we need to use the embedded (modified) Portaudio version.
        configure.args-append \
                    -Denable_portaudio=ON -Duse_system_portaudio=OFF \
    }
}
configure.env-append \
                    PORTMIDI_CFLAGS=-I${prefix}/include \
                    PORTMIDI_LIBS=${prefix}/lib/libportmidi.dylib
depends_lib-append \
                    port:portmidi
platform linux {
#     if {[string match *clang* ${configure.cxx}]} {
#         variant libcxx description {highly experimental and probably broken option to build against libc++. \
#                 Requires using clang and an independently provided libc++ installation.} {
#             configure.cxx_stdlib \
#                             libc++
#             configure.cxxflags-replace \
#                         -stdlib=libstdc++ \
#                         -stdlib=libc++
#             configure.cxxflags-append \
#                         -DHAVE_TYPE_TRAITS
#         }
#     }

#     configure.args-append \
#                     --with-midi \
#                     LIBS=-ltiff
    configure.args-append \
                    --with-midi \
                    --with-portaudio=local
    configure.cppflags-append \
                    -I${prefix}/include -DUSE_AQUA_THEME
#     configure.cxxflags-append \
#                     -std=gnu++11
#     # as long as we use the host's wxWidgets. We use the static library
#     # because otherwise we might still be getting MacPorts' libtiff
#     # which lacks the version symbols required by the host's wxWidgets libraries.
#     configure.ldflags-append \
#                     /usr/lib/x86_64-linux-gnu/libtiff.a
    configure.env-replace \
                    PORTMIDI_LIBS=${prefix}/lib/libportmidi.dylib \
                    PORTMIDI_LIBS=${prefix}/lib/libportmidi.so
}

# make sure the C++ stdlib argument is added to the LDFLAGS too
if {${configure.cxx_stdlib} ne "" && [string match *clang* ${configure.cxx}]} {
    configure.ldflags-append \
                    -stdlib=${configure.cxx_stdlib}
}

pre-configure {
    configure.args-append \
                    "CPPFLAGS=\"${configure.cppflags}\""
}

build.args-append   V=1 VERBOSE=1

# with everything defined/declared as intended we can now
# handle the post-patch step with its reinplace statements.
post-patch {
    set python_bin ${prefix}/bin/python2.7
    if {${subport} eq "${name}"} {
        reinplace -W ${worksrcpath} "s|@@PYTHON@@|${python_bin}|g" \
                                    lib-src/lv2/build
    }
    reinplace -W ${worksrcpath} "s|@@PYTHON@@|${python_bin}|g" \
                                lib-src/lv2/configure
    reinplace -W ${worksrcpath} "s|/usr/local|${prefix}|g" \
                                src/effects/ladspa/LadspaEffect.cpp \
                                src/effects/VST/VSTEffect.cpp \
                                src/export/ExportMP3.cpp \
                                lib-src/lv2/lilv/wscript \
                                lib-src/lv2/lilv/test/lilv_test.c
    reinplace -W ${worksrcpath} "s|/Library/Audio/Plug-Ins/Vamp|/Library/Audio/Plug-Ins/Vamp:${prefix}/lib/vamp|g" \
                                lib-src/libvamp/src/vamp-hostsdk/PluginHostAdapter.cpp
    reinplace -W ${worksrcpath} "s|/Library/Application Support/audacity/libs|${prefix}/lib|g" \
                                src/FFmpeg.h
    reinplace -W ${worksrcpath} "s| -Werror||g" \
                                lib-src/portaudio-v19/configure.in \
                                lib-src/portaudio-v19/configure
    reinplace -W ${worksrcpath} "s|@LDFLAGS@|${configure.ldflags}|g" \
                                lib-src/libvamp/Makefile.in
    platform darwin {
        # audacity 2.1.2 contains C++ files that include system SDK headers and ObjC code on OS X;
        # they must thus be built as ObjC++
        set make_objcpp { \
            {CommandManager src/commands    {src/Makefile.in src/Makefile.am}} \
            {Effect         src/effects     {src/Makefile.in src/Makefile.am}} \
            {LV2Effect      src/effects/lv2 {src/Makefile.in src/Makefile.am}} \
        }
        foreach mm ${make_objcpp} {
            set f  [lindex ${mm} 0]
            set d  [lindex ${mm} 1]
            set mk [lindex ${mm} 2]
            foreach m ${mk} {
                reinplace -W ${worksrcpath} "s|/${f}.cpp|/${f}.mm|g" ${m}
            }
            # it's easiest to symlink f.mm to f.cpp; clang++ will do the rest.
            if {![file exists ${worksrcpath}/${d}/${f}.mm]} {
                ln -s ${f}.cpp ${worksrcpath}/${d}/${f}.mm
            }
        }
        reinplace -W ${worksrcpath} "s|/VSTControlGTK.cpp|/VSTControlOSX.mm|g" \
                src/Makefile.in src/Makefile.am
        if {[file exists ${worksrcpath}/src/menus/WindowMenus.cpp] && ![file exists ${worksrcpath}/src/menus/WindowMenus.mm]} {
            ln -s WindowMenus.cpp ${worksrcpath}/src/menus/WindowMenus.mm
        }
    }
}

platform darwin {
    set aud_app_path    ${applications_dir}/Audacity.app
    destroot.keepdirs   ${destroot}${aud_app_path}/Contents/Resources/en.lproj

    post-destroot {
        # create the app bundle infrastructure
        xinstall -m 755 -d ${destroot}${aud_app_path}/Contents/MacOS
        xinstall -m 755 -d ${destroot}${aud_app_path}/Contents/Resources
        # the BundleExec:
        file rename ${destroot}${prefix}/bin/audacity ${destroot}${aud_app_path}/Contents/MacOS/Audacity
        # install the Info.plist provided by Audacity
        xinstall -m 644 ${worksrcpath}/mac/Info.plist ${destroot}${aud_app_path}/Contents/
        # adapt the provided Info.plist
        reinplace "s|AUDACITY_EXECUTABLE|Audacity|g" ${destroot}${aud_app_path}/Contents/Info.plist
        reinplace "s|AUDACITY_INFO_VERSION|${version} (MacPorts)|g" ${destroot}${aud_app_path}/Contents/Info.plist
        # install the provided icons into the Resources directory
        foreach r [glob -nocomplain ${worksrcpath}/mac/Resources/*.icns] {
            xinstall -m 644 ${r} ${destroot}${aud_app_path}/Contents/Resources/
        }
        # allow the application to find certain things where it expects them on OS X (= inside the app bundle)
        foreach r [glob -nocomplain ${destroot}${prefix}/share/audacity/*] {
            ln -s ${prefix}/share/audacity/[file tail ${r}] ${destroot}${aud_app_path}/Contents/Resources
        }
        # install translation resources
        foreach l [glob -nocomplain ${destroot}${prefix}/share/locale/*] {
            set lang [file tail ${l}]
            xinstall -m 755 -d ${destroot}${aud_app_path}/Contents/Resources/${lang}.lproj
            ln -s ${prefix}/share/locale/${lang}/LC_MESSAGES/audacity.mo ${destroot}${aud_app_path}/Contents/Resources/${lang}.lproj/
        }
        foreach l [glob -nocomplain ${wxWidgets.prefix}/share/locale/*] {
            set lang [file tail ${l}]
            xinstall -m 755 -d ${destroot}${aud_app_path}/Contents/Resources/${lang}.lproj
            ln -s ${l}/LC_MESSAGES/wxstd.mo ${destroot}${aud_app_path}/Contents/Resources/${lang}.lproj/
        }
        # install a wrapper script in ${prefix}/bin
        system "echo \"#!/bin/sh\nexec \\\"${aud_app_path}/Contents/MacOS/Audacity\\\" \\\"\\\$\@\\\"\" > ${destroot}${prefix}/bin/audacity"
        system "chmod 755 ${destroot}${prefix}/bin/audacity"
    }
}

notes "
    In case Audacity complains about finding FFmpeg or Lame, please locate these libraries\
    under ${prefix}/lib in the Libraries section of the Preferences dialog (see\
    http://manual.audacityteam.org/man/installing_and_updating_audacity_on_linux.html#locate)
"

# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax Tcl/Tk; tab-indents true; tab-width 4;
