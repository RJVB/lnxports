diff --git a/libraries/lib-viewport/CMakeLists.txt b/libraries/lib-viewport/CMakeLists.txt
index 7e90f6899..8326e729d 100644
--- a/libraries/lib-viewport/CMakeLists.txt
+++ b/libraries/lib-viewport/CMakeLists.txt
@@ -2,6 +2,10 @@
 Viewport defines a callback facade for horizontal and vertical scrollbars, and
 provides methods to scroll and zoom the view of tracks.
 ]]
+
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
+set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -g")
+
 set( SOURCES
    Viewport.cpp
    Viewport.h
diff --git a/libraries/lib-viewport/Viewport.cpp b/libraries/lib-viewport/Viewport.cpp
index 2797dce41..149913537 100644
--- a/libraries/lib-viewport/Viewport.cpp
+++ b/libraries/lib-viewport/Viewport.cpp
@@ -251,6 +251,12 @@ void Viewport::UpdateScrollbarsForTracks()
 {
    auto &project = mProject;
    auto &tracks = TrackList::Get( project );
+   if (tracks.cbegin() == tracks.cend()) {
+      fprintf(stderr, "%s: no tracks, bailing early.\n", __PRETTY_FUNCTION__);
+      // return early because we can also end up here when we're called for a
+      // window that was already closed (race-like condition at shutdown).
+      return;
+   }
    auto &viewInfo = ViewInfo::Get( project );
 
    // To decide whether to repaint the view
@@ -388,8 +394,12 @@ void Viewport::UpdateScrollbarsForTracks()
 
 void Viewport::HandleResize()
 {
+//    fprintf(stderr, "%s[%p] : project %p\n", __PRETTY_FUNCTION__, this, &mProject);
    BasicUI::CallAfter( [wthis = weak_from_this()]{
       if (auto This = wthis.lock()) {
+//          fprintf(stderr, "%s[%p/%p] : updating scrollbars for project %p\n", __PRETTY_FUNCTION__,
+//                  &wthis, This.get(),
+//                  &This->mProject);
          This->UpdateScrollbarsForTracks();
          This->Publish({ false, false, true });
       }
