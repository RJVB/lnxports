diff --git a/source/versioner/source/build/cmake/OmegaEnviroment.cmake b/source/versioner/source/build/cmake/OmegaEnviroment.cmake
index 0306351..91fcd44 100644
--- a/source/versioner/source/build/cmake/OmegaEnviroment.cmake
+++ b/source/versioner/source/build/cmake/OmegaEnviroment.cmake
@@ -12,13 +12,13 @@ else (${CMAKE_SYSTEM_NAME} MATCHES "Windows")
     message(FATAL_ERROR "Unsupported Operating System")
 endif (${CMAKE_SYSTEM_NAME} MATCHES "Windows")
 
-set(TIGER_DEBUG_BUILD TRUE CACHE BOOL "Create Debug Build")
+set(TIGER_DEBUG_BUILD FALSE CACHE BOOL "Create Debug Build")
 
 if (${TIGER_DEBUG_BUILD})
     set(CMAKE_BUILD_TYPE "Debug")
     add_definitions(-DOMEGA_DEBUG)
-else (${TIGER_DEBUG_BUILD})
-    set(CMAKE_BUILD_TYPE "Release")
+else()
+    message("Using CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
 endif (${TIGER_DEBUG_BUILD})
 set(CMAKE_CONFIGURATION_TYPES ${CMAKE_BUILD_TYPE})
 
diff --git a/source/build/cmake/OmegaEnviroment.cmake b/source/build/cmake/OmegaEnviroment.cmake
index beab0d1..51015ef 100644
--- a/source/build/cmake/OmegaEnviroment.cmake
+++ b/source/build/cmake/OmegaEnviroment.cmake
@@ -16,7 +16,7 @@
     set(OMEGA_IS64BIT FALSE)
 endif (CMAKE_SIZEOF_VOID_P EQUAL 8)
 
-set(TIGER_DEBUG_BUILD TRUE CACHE BOOL "Create Debug Build")
+set(TIGER_DEBUG_BUILD FALSE CACHE BOOL "Create Debug Build")
 set(TIGER_DEBUG_PLAYBACK_LOG FALSE CACHE BOOL "Log Playback Debug Messages")
 if (${OMEGA_MACOSX})
     set(TIGER_MAC_STORE FALSE CACHE BOOL "Apple Mac Store Build")
@@ -32,9 +32,8 @@
 if (TIGER_DEBUG_BUILD)
     set(CMAKE_BUILD_TYPE "Debug")
     add_definitions(-DOMEGA_DEBUG)
-else (TIGER_DEBUG_BUILD)
-    set(CMAKE_BUILD_TYPE "Release")
-#    set(CMAKE_BUILD_TYPE "RelWithDebInfo")
+else()
+    message("Using CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
 endif (TIGER_DEBUG_BUILD)
 set(CMAKE_CONFIGURATION_TYPES ${CMAKE_BUILD_TYPE})
 
@@ -149,7 +148,7 @@
     add_definitions(-DOMEGA_LINUX)
     add_compile_options(-Wno-psabi)
     add_compile_options(-Wunused-result)
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -O2")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
 endif (OMEGA_WIN32)
 
 include_directories(AFTER "${ROOT_PROJECT_PATH}/source" )
