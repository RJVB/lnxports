diff --git CMakeLists.txt CMakeLists.txt
index 77e5388..3b5a86a 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -373,9 +373,20 @@ elseif(UNIX)
       set(PKGCONFIG_CFLAGS "${PKGCONFIG_CFLAGS} -DPA_USE_AUDIOIO=1")
     endif()
 
-    find_package(PulseAudio)
-    cmake_dependent_option(PA_USE_PULSEAUDIO "Enable support for PulseAudio general purpose sound server" ON PulseAudio_FOUND OFF)
+    pkg_check_modules(SNDIO sndio)
+    cmake_dependent_option(PA_USE_SNDIO "Enable support for sndio" ON SNDIO_FOUND OFF)
+    if(PA_USE_SNDIO)
+      target_link_libraries(PortAudio PRIVATE "${SNDIO_LIBRARIES}")
+      target_sources(PortAudio PRIVATE src/hostapi/sndio/pa_sndio.c)
+      target_compile_definitions(PortAudio PUBLIC PA_USE_SNDIO=1)
+      set(PKGCONFIG_CFLAGS "${PKGCONFIG_CFLAGS} -DPA_USE_SNDIO=1")
+      set(PKGCONFIG_REQUIRES_PRIVATE "${PKGCONFIG_REQUIRES_PRIVATE} sndio")
+    endif()
+  endif()
+endif()
+    option(PA_USE_PULSEAUDIO "Enable support for PulseAudio general purpose sound server" OFF)
     if(PA_USE_PULSEAUDIO)
+      find_package(PulseAudio REQUIRED)
       target_link_libraries(PortAudio PRIVATE PulseAudio::PulseAudio)
       target_sources(PortAudio PRIVATE
         src/hostapi/pulseaudio/pa_linux_pulseaudio_block.c
@@ -383,24 +394,15 @@ elseif(UNIX)
         src/hostapi/pulseaudio/pa_linux_pulseaudio_cb.c)
 
       target_compile_definitions(PortAudio PUBLIC PA_USE_PULSEAUDIO=1)
-      set(PKGCONFIG_CFLAGS "${PKGCONFIG_CFLAGS} -DPA_USE_PULSEAUDIO=1")
-      set(PKGCONFIG_REQUIRES_PRIVATE "${PKGCONFIG_REQUIRES_PRIVATE} libpulse")
+	 if (NOT APPLE)
+        set(PKGCONFIG_CFLAGS "${PKGCONFIG_CFLAGS} -DPA_USE_PULSEAUDIO=1")
+        set(PKGCONFIG_REQUIRES_PRIVATE "${PKGCONFIG_REQUIRES_PRIVATE} libpulse")
+      endif()
 
       # needed for PortAudioConfig.cmake so `find_package(PortAudio)` works in downstream projects
       install(FILES cmake/modules/FindPulseAudio.cmake DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/portaudio/modules")
     endif()
 
-    pkg_check_modules(SNDIO sndio)
-    cmake_dependent_option(PA_USE_SNDIO "Enable support for sndio" ON SNDIO_FOUND OFF)
-    if(PA_USE_SNDIO)
-      target_link_libraries(PortAudio PRIVATE "${SNDIO_LIBRARIES}")
-      target_sources(PortAudio PRIVATE src/hostapi/sndio/pa_sndio.c)
-      target_compile_definitions(PortAudio PUBLIC PA_USE_SNDIO=1)
-      set(PKGCONFIG_CFLAGS "${PKGCONFIG_CFLAGS} -DPA_USE_SNDIO=1")
-      set(PKGCONFIG_REQUIRES_PRIVATE "${PKGCONFIG_REQUIRES_PRIVATE} sndio")
-    endif()
-  endif()
-endif()
 
 # Make sure PA_USE_ALSA is available as it is used for PortAudioConfig.cmake configuration
 if (NOT PA_USE_ALSA)
@@ -461,6 +463,7 @@ set_target_properties(PortAudio PROPERTIES
   WINDOWS_EXPORT_ALL_SYMBOLS TRUE
   VERSION ${PROJECT_VERSION}
   SOVERSION 2
+  MACHO_COMPATIBILITY_VERSION 3
 )
 install(TARGETS PortAudio
   EXPORT PortAudio-targets
