# -*- Mode: Tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
# PortGroup           cmake 1.1
PortGroup           LTO 1.0

name                portaudio
set major           19
set minor           6
set reldate         20161030
set distversion     ${major}[format %04d [expr {$minor * 100}]]_${reldate}
version             ${major}.${minor}.${reldate}
epoch               1
categories          audio devel
platforms           darwin macosx
maintainers         nomaintainer
license             MIT

description         PortAudio is a free, cross platform, open-source, audio I/O library.

long_description    PortAudio is a free, cross platform, open-source, audio I/O library. \
                    It lets you write simple audio programs in 'C' or C++ that will \
                    compile and run on many platforms including Windows, \
                    Macintosh OS X, and Unix (OSS/ALSA). \
                    It is intended to promote the exchange of audio \
                    software between developers on different platforms. \
                    Many applications use PortAudio for Audio I/O.

homepage            http://www.portaudio.com/
master_sites        ${homepage}archives

distname            pa_stable_v${distversion}
extract.suffix      .tgz

checksums           rmd160  e6e5cd3f3cb7469aa17549c189e445d573567e13 \
                    sha256  f5a21d7dcd6ee84397446fa1fa1a0675bb2e8a4a6dceb4305a8404698d8d1513
#                     size    1450572

worksrcdir          ${name}

# By default, PortAudio is built as a universal binary.
# To build a non-universal library for the host architecture,
# simply use the --disable-mac-universal option with configure.
# http://www.portaudio.com/trac/wiki/TutorialDir/Compile/MacintoshCoreAudio
configure.args      --disable-mac-universal \
                    --enable-cxx \
                    --enable-option-checking \
                    --without-alsa \
                    --without-jack \
                    --without-oss \
                    --without-asihpi \
                    --without-winapi
# cmake.save_configure_cmd "log too"
# configure.args-append \
#                     -DPA_USE_ALSA=OFF \
#                     -DPA_USE_JACK=OFF \
#                     -DPA_USE_COREAUDIO=ON \
#                     -DPA_USE_DS=OFF

variant jack description {enable JACK support} {
    configure.args-replace --disable-jack \
                    --enable-jack
#     configure.args-replace \
#                     -DPA_USE_JACK=OFF \
#                     -DPA_USE_JACK=ON
    depends_lib-append \
                    port:jack
}

variant tools description "install the example and test utilities to ${prefix}/libexec/portaudio" {
#     configure.args-append \
#                     -DPA_BUILD_TESTS=ON \
#                     -DPA_BUILD_EXAMPLES=ON
    post-build {
        # be certain the targets were build
        system -W ${build.dir} "make tests"
        system -W ${build.dir} "make examples"
    }
    post-destroot {
        set utildir ${destroot}${prefix}/libexec/portaudio
        xinstall -m 755 -d ${utildir}
        foreach b [glob ${build.dir}/bin/.libs/pa*] {
            xinstall -m 755 ${b} ${utildir}
        }
    }
}

# patch-configure removes -Werror, and adds -DNDEBUG.
patchfiles          patch-configure.diff \
                    patch-ltmain.sh.diff \
                    patch-src__common__pa_types.h.diff \
                    patch-audacity-portmixer.diff

platform darwin {
    if {${os.major} >= 10} {
        patchfiles-append patch-src__hostapi__coreaudio__pa_mac_core.c.diff
    }
}
platform linux {
    configure.args-delete \
                    --without-asihpi
    configure.args-replace \
                    --without-alsa \
                    --with-alsa
#     configure.args-replace \
#                     -DPA_USE_ALSA=OFF \
#                     -DPA_USE_ALSA=ON
}

# post-configure {
#     xinstall -m 755 -d ${build.dir}/bindings/cpp
#     system -W ${build.dir}/bindings/cpp "env ${configure.env} CC=${configure.cc} CXX=${configure.cxx} \
#         \"CPPFLAGS=${configure.cppflags}\" \"CFLAGS=${configure.cflags}\" \"CXXFLAGS=${configure.cxxflags}\" \
#         \"LDFLAGS=${configure.ldflags}\" ${worksrcpath}/bindings/cpp/configure --prefix=${prefix} --disable-silent-rules --disable-dependency-tracking --enable-fast-install"
# }
# 
# post-build {
#     system -W ${build.dir}/bindings/cpp "make -kw"
# }

# use_parallel_build  no

post-destroot {
#     system -W ${build.dir}/bindings/cpp "make -kw install ${DESTDIR}=${destroot}"
    xinstall -d ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 -W ${worksrcpath} \
        README.txt \
        LICENSE.txt \
        ${destroot}${prefix}/share/doc/${name}
    # The build of PyAudio requires pa_mac_core.h.
    xinstall -m 644 ${worksrcpath}/include/pa_mac_core.h \
        ${destroot}${prefix}/include
}

livecheck.type      regex
livecheck.url       [lindex ${master_sites} 0]
livecheck.version   ${distversion}
livecheck.regex     pa_stable_v(\[0-9._\]+)\\.
