# -*- Mode: Tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
# PortGroup           cmake 1.1
PortGroup           LTO 1.0

name                portaudio
categories          audio devel
platforms           darwin macosx
maintainers         {ra1nb0w @ra1nb0w} openmaintainer
license             MIT

description         PortAudio is a free, cross platform, open-source, audio I/O library.

long_description    PortAudio is a free, cross platform, open-source, audio I/O library. \
                    It lets you write simple audio programs in 'C' or C++ that will \
                    compile and run on many platforms including Windows, \
                    Macintosh OS X, and Unix (OSS/ALSA). \
                    It is intended to promote the exchange of audio \
                    software between developers on different platforms. \
                    Many applications use PortAudio for Audio I/O.

homepage            http://www.portaudio.com/

# next commit aa053464eb261337c2c763f2a3df1e5ef8f4797e drop 10.5 support
github.setup        Portaudio portaudio b323e01523520a78c71fbbbb4262b0f3e4ab3f49
# version             20210401-[string range ${github.version} 0 7]
# RC(1) = 99; RC2 = 999 etc.
version             19.7.0.999.123
epoch               230518
fetch.type          git
distname            ${name}-git
# checksums           rmd160  2449e768b762c5c1777dd3c2a291e3cdbe9dc30c \
#                     sha256  d29bbe2b5a6f9447571e738a65c09239da61e73eae7d3b6ffd7cb7a32b2a8709 \
#                     size    1463021
# revision            0

# By default, PortAudio is built as a universal binary.
# To build a non-universal library for the host architecture,
# simply use the --disable-mac-universal option with configure.
# http://www.portaudio.com/trac/wiki/TutorialDir/Compile/MacintoshCoreAudio
configure.args      --disable-mac-universal \
                    --enable-cxx \
                    --enable-option-checking \
                    --without-alsa \
                    --without-jack \
                    --without-oss \
                    --without-asihpi \
                    --without-winapi
# cmake.save_configure_cmd "log too"
# configure.args-append \
#                     -DPA_USE_ALSA=OFF \
#                     -DPA_USE_JACK=OFF \
#                     -DPA_USE_COREAUDIO=ON \
#                     -DPA_USE_DS=OFF

platform linux {
    configure.args-delete \
                    --without-asihpi
    configure.args-replace \
                    --without-alsa \
                    --with-alsa
#     configure.args-replace \
#                     -DPA_USE_ALSA=OFF \
#                     -DPA_USE_ALSA=ON
}

# use_parallel_build  no

patchfiles          patch-ltmain.sh.diff \
                    patch-src__common__pa_types.h.diff \
                    patch-audacity-portmixer.diff

pre-configure {
    use_autoreconf [expr ![file exists ${worksrcpath}/config.log]]
    autoreconf.args -fvi
    # autoreconf can remove a needed script, somehow
    if {[file exists ${worksrcpath}/depcomp] && ![file exists ${workpath}/depcomp.bak]} {
        xinstall -m 755 ${worksrcpath}/depcomp ${workpath}/depcomp.bak
    }
}
post-configure {
    # restore the required script, if necessary
    if {![file exists ${worksrcpath}/depcomp] && [file exists ${workpath}/depcomp.bak]} {
        xinstall -m 755 ${workpath}/depcomp.bak ${worksrcpath}/depcomp
    }
}
        
variant jack description {Enable JACK support} {
#     configure.args-replace \
#                     -DPA_USE_JACK=OFF \
#                     -DPA_USE_JACK=ON
    platform darwin {
        depends_lib-append \
                    port:jack
    }
    configure.args-replace \
                    --without-jack \
                    --with-jack
}

variant tools description {Install the example and test utilities to ${prefix}/libexec/${name}} {
#     configure.args-append \
#                     -DPA_BUILD_TESTS=ON \
#                     -DPA_BUILD_EXAMPLES=ON
    post-destroot {
        set utildir ${destroot}${prefix}/libexec/${name}
        xinstall -m 755 -d ${utildir}
        # avoid installing any .dSYM directories that might have been created
        xinstall -m 755 {*}[glob -type f ${build.dir}/bin/.libs/pa*] ${utildir}
    }
}

post-destroot {
    xinstall -d ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 -W ${worksrcpath} \
        README.md \
        LICENSE.txt \
        ${destroot}${prefix}/share/doc/${name}
    # The build of PyAudio requires pa_mac_core.h.
    xinstall -m 644 ${worksrcpath}/include/pa_mac_core.h \
        ${destroot}${prefix}/include
}
