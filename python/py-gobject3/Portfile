# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0
PortGroup           meson 1.0

name                py-gobject3
set my_name         pygobject
version             3.36.1
set branch          [join [lrange [split ${version} .] 0 1] .]
categories-append   gnome
license             LGPL-2.1+
maintainers         {devans @dbevans} openmaintainer
platforms           darwin
description         Python bindings for GObject, version 3

long_description    PyGObject is a Python dynamic module that enables developers to use the \
                    power of GObject, which is part of the GNOME platform.

homepage            https://pygobject.readthedocs.io/
master_sites        gnome:sources/${my_name}/${branch}/
distname            ${my_name}-${version}
use_xz              yes

checksums           rmd160  841eb0d9a4fb25d0c27dc8d25b0e38f2bbc3f387 \
                    sha256  d1bf42802d1cec113b5adaa0e7bf7f3745b44521dc2163588d276d5cd61d718f
#                     size    556568

python.versions     27 35 36 37 38

if {${name} ne ${subport}} {
    depends_build-append    port:pkgconfig

    depends_lib-append      path:lib/pkgconfig/glib-2.0.pc:glib2 \
                            port:libffi \
                            port:gobject-introspection
    if {${python.version} ne 27} {
        depends_lib-append \
                            port:py${python.version}-cairo
    }

    depends_test            port:py${python.version}-pytest

# #   blacklist compilers that do not support C11
#     compiler.blacklist  *gcc-3.* *gcc-4.* {clang < 300}


    use_configure           yes
    configure.python        ${python.bin}
    configure.pkg_config_path \
                            ${python.prefix}/lib/pkgconfig
    configure.pre_args      --prefix='${python.prefix}'
    configure.args-append   -Dpython=${prefix}/bin/python${python.branch}
    configure.cppflags-append \
                            -I${python.prefix}/include

    meson.save_configure_cmd "install log"

    destroot.cmd            ${build.cmd}
    destroot.target         install
    destroot.destdir        DESTDIR=${destroot}
# 
    test.run                yes
    test.env                PYTHONPATH=[glob -nocomplain ${worksrcpath}/build/lib*]
    test.target             check

    post-destroot {
        set docdir ${prefix}/share/doc/${subport}
        xinstall -d ${destroot}${docdir}
        xinstall -m 0644 -W ${worksrcpath} \
            COPYING NEWS PKG-INFO README.rst \
            ${destroot}${docdir}

        # register the package as installed for dependents using pkg_resources
        # this is a minimal dist-info directory.
        set dinfodir ${python.pkgd}/PyGObject-${version}.dist-info
        if {![file exists ${destroot}${dinfodir}/METADATA]} {
            xinstall -m 755 -d ${destroot}${dinfodir}
            xinstall -m 644 ${worksrcpath}/PKG-INFO ${destroot}${dinfodir}/METADATA
        }
    }

    livecheck.type  none
} else {
    livecheck.type  gnome
    livecheck.name  ${my_name}
}
