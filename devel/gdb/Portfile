# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       compiler_blacklist_versions 1.0
PortGroup       muniversal 1.0
platform darwin {
    PortGroup   cxx11 1.1
}
PortGroup       locale_select 1.0

name            gdb
version         8.1
categories      devel
license         GPL-3+
maintainers     nomaintainer
description     GDB: The GNU Project Debugger

long_description \
GDB, the GNU Project debugger, allows you to see what is going on 'inside' \
another program while it executes -- or what another program was doing at the \
moment it crashed.  GDB can do four main kinds of things (plus other things \
in support of these) to help you catch bugs in the act: \
    a) start your program, specifying anything that might affect its behavior, \
    b) make your program stop on specified conditions, \
    c) examine what has happened, when your program has stopped, \
    d) change things in your program, so you can experiment with correcting \
       the effects of one bug and go on to learn about another. \
The program being debugged can be written in Ada, C, C++, Objective-C, \
Pascal (and many other languages). Those programs might be executing on \
the same machine as GDB (native) or on another machine (remote). GDB \
can run on most popular UNIX and Microsoft Windows variants.

homepage        https://www.gnu.org/software/gdb/
platforms       darwin linux
supported_archs x86_64 i386

master_sites    gnu

checksums       rmd160  71bbfb22a924f5aa88af7ba8ed11f763a8666ad1 \
                sha256  e54a2322da050e4b00785370a282b9b8f0b25861ec7cfbbce0115e253eea910e \
                size    37334207

# these dependencies are listed under depends_lib rather than depends_build
# because gdb will link with libraries they provide if installed.
# there may be more. See variable host_libs in configure.ac.
# port:guile should also be a dependency, but currently does not build universally. (#48767)

platform darwin {
    depends_lib port:boehmgc
}
depends_lib-append \
                port:expat \
                port:libiconv \
                port:ncurses \
                port:gettext \
                port:zlib
if {${os.platform} ne "darwin"} {
    depends_build-append \
                port:ncurses-dev
    configure.env-append \
                LIBS="-L${prefix}/lib -lintl"
    build.env-append \
                LIBS="-L${prefix}/lib -lintl"
    # we install a certain number of files also installed by port:binutils.
    # Avoid existential problems: delete our copy and require binutils so
    # everything is complete.
    depends_run-append \
                port:binutils
}

# clang 600.0.57 is known to segfault when building this
compiler.blacklist {clang >= 600 < 601}

configure.args \
    --with-docdir=${prefix}/share/doc \
    --without-python \
    --disable-werror

platform darwin {
    configure.args-append \
        --without-guile \
        --program-prefix=g
}
if {${os.platform} ne "darwin"} {
    configure.args-append \
        --enable-compressed-debug-sections=all \
        --enable-plugins \
        --enable-tui \
        --disable-gdbtk \
        --enable-rpath \
        --enable-lto
}

post-destroot {
    if {${os.platform} eq "darwin" && ${os.major} < 12} {
        system "chgrp procmod ${destroot}${prefix}/bin/ggdb*"
        system "chmod g+s ${destroot}${prefix}/bin/ggdb*"
    }

    platform darwin {
        xinstall -m 755 -d ${destroot}${prefix}/libexec/gnubin
        foreach info [glob -tails -directory ${destroot}${prefix}/share/info g*] {
            move ${destroot}${prefix}/share/info/${info} ${destroot}${prefix}/share/info/g${info}
        }
        foreach binary [glob -tails -directory ${destroot}${prefix}/bin g*] {
            ln -s ${prefix}/bin/${binary} ${destroot}${prefix}/libexec/gnubin/[string range $binary 1 end]
        }
    }
    # remove items already installed by port:binutils
    file delete -force ${destroot}${prefix}/share/locale
    file delete -force ${destroot}${prefix}/share/info/bfd.info
    file delete -force ${destroot}${prefix}/lib/libopcodes.la
    file delete -force ${destroot}${prefix}/lib/libopcodes.a
    file delete -force ${destroot}${prefix}/lib/libbfd.la
    file delete -force ${destroot}${prefix}/lib/libbfd.a
    file delete -force {*}[glob -directory ${destroot}${prefix}/include/ *.h]
}

set pythons_suffixes {27 35 36}

set pythons_ports {}
foreach s ${pythons_suffixes} {
    lappend pythons_ports python${s}
}

foreach s ${pythons_suffixes} {
    set p python${s}
    set v [string index ${s} 0].[string index ${s} 1]
    set i [lsearch -exact ${pythons_ports} ${p}]
    set c [lreplace ${pythons_ports} ${i} ${i}]
    variant ${p} description "Build GDB with Python ${v} Scripting" conflicts {*}${c} "
        depends_lib-append      port:${p}
        configure.args-delete   --without-python
        configure.args-append   --with-python=${prefix}/bin/python${v}
        patchfiles-append       patch-python-config.py.diff
    "
}

variant multiarch description {Support all target architectures} {
    configure.args-append    --enable-targets=all
}

if {${os.platform} eq "darwin" && ${os.major} >= 12} {
    notes "
You will need to codesign ${prefix}/bin/ggdb

See https://sourceware.org/gdb/wiki/BuildingOnDarwin#Giving_gdb_permission_to_control_other_processes
for more information.
"
}


livecheck.type  regex
livecheck.url   http://ftp.gnu.org/gnu/gdb/
livecheck.regex gdb-(\\d+(?:\\.\\d+)+)\\.tar
