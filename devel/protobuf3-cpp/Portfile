# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                1.0
PortGroup       github    1.0

# see note to remove block below at next update
github.setup    protocolbuffers protobuf 3.10.1 v
revision        0

checksums       rmd160  8099f5ce7b46f5e6255b453566b110f695f690da \
                sha256  e82ee5bdde198e0a1935e280748a86a7989474ea771418a2fd90f03e2e65b99b \
                size    4598421

name            protobuf3-cpp
categories      devel
maintainers     nomaintainer
license         BSD

description     Encode data in an efficient yet extensible format.

long_description \
                Google Protocol Buffers are a flexible, efficient, \
                automated mechanism for serializing structured data -- \
                think XML, but smaller, faster, and simpler.  You \
                define how you want your data to be structured once, \
                then you can use special generated source code to \
                easily write and read your structured data to and from \
                a variety of data streams and using a variety of \
                languages.  You can even update your data structure \
                without breaking deployed programs that are compiled \
                against the "old" format.  You specify how you want \
                the information you're serializing to be structured by \
                defining protocol buffer message types in .proto \
                files.  Each protocol buffer message is a small \
                logical record of information, containing a series of \
                name-value pairs.

homepage        https://developers.google.com/protocol-buffers/

github.tarball_from releases
distname        protobuf-cpp-${version}
worksrcdir      protobuf-${version}

compiler.cxx_standard   2011
compiler.thread_local_storage   yes

platforms       linux darwin

depends_lib     port:zlib

####################
PortGroup devport 1.0

devport_long_description ${long_description}\nThis installs the headers, link libraries and the protoc utility.
create_devport port:${name}

post-destroot {
    if {${subport} eq "${name}"} {
        register_devport_standard_content
        devport_content-append ${prefix}/bin/protoc
        create_devport_content_archive
    }
}

if {${subport} eq "${name}-dev"} {
    conflicts   protobuf-cpp-dev
    # we don't care about anything that follows,
    # return here to avoid having to add more subport checks.
    return
}
####################

# bundled libtool version doesn't recognise -stdlib
use_autoreconf  yes

# 2.6.1's glibtool doesn't pass -stdlib=libc++ to the linker
# use_autoreconf  yes
# autoreconf.args -fvi
# see https://trac.macports.org/wiki/UsingTheRightCompiler
configure.env-append \
    CC_FOR_BUILD=${configure.cc} \
    CXX_FOR_BUILD=${configure.cxx}

configure.cflags-append     -g
configure.cppflags-append   -g

post-destroot {
    set docdir ${destroot}${prefix}/share/doc/${name}

    xinstall -d -m 755 ${docdir}

    foreach f {CHANGES.txt CONTRIBUTORS.txt LICENSE README.md editors examples} {
        file copy ${worksrcpath}/${f} ${docdir}
    }
}

test.run    yes
test.target check

github.livecheck.regex  {([0-9.]+)}
