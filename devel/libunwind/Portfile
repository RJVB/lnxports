# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           LTO 1.0
PortGroup           save_configure_cmd 1.0

github.setup        libunwind libunwind 24947191d61dda869e039e0414fe97e9f594acd5
fetch.type          git
version             1.7.2
worksrcdir          ${name}-git
distname            ${name}-git

categories          sysutils
platforms           linux

maintainers         gmail.com:rjvbertin openmaintainer
license             MIT
homepage            https://www.nongnu.org/libunwind/

description         a portable and efficient C programming interface (API) to determine the call-chain of a program
long_description    The primary goal of this project is to define a portable and efficient C programming \
                    interface (API) to determine the call-chain of a program. The API additionally provides \
                    the means to manipulate the preserved (callee-saved) state of each call-frame and to \
                    resume execution at any point in the call-chain (non-local goto). The API supports both \
                    local (same-process) and remote (across-process) operation. As such, the API is useful \
                    in a number of applications.

installs_libs       yes

####################
PortGroup           devport 1.0
create_devport      port:${name}

if {![is_mainport]} {
    # we don't care about all the mainport-related stuff that follows!
    return
}

####################    

depends_build-append \
                    port:autoconf \
                    port:automake
depends_lib-append  port:zlib \
                    port:xz

pre-configure {
    if {![file exists ${worksrcpath}/configure]
        || [file mtime ${worksrcpath}/configure.ac] > [file mtime ${worksrcpath}/configure]
    } {
        system -W ${worksrcpath} "autoreconf -i"
    }
}

patch.pre_args      -Np1

configure.args-append \
                    --disable-dependency-tracking \
                    --enable-coredump \
                    --enable-ptrace \
                    --enable-setjmp \
                    --enable-cxx-exceptions \
                    --enable-msabi-support \
                    --enable-minidebuginfo \
                    --enable-zlibdebuginfo
configure.save_configure_cmd "install log"

# configure.env-append \
#                     "LIBS=-lintl"

build.post_args-append  V=1

post-destroot {
    ####################
    register_devport_standard_content
    create_devport_content_archive
    ####################
}
