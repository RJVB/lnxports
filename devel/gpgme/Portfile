# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 153382 2016-09-29 18:43:43Z devans@macports.org $

PortSystem          1.0

name                gpgme
version             1.7.0
revision            1
categories          devel security crypto
license             {LGPL-2.1+ GPL-3+}
maintainers         devans openmaintainer
description         A library for easy acces to GnuPG.
long_description    GnuPG Made Easy (GPGME) is a library designed to make access \
                    to GnuPG easier for applications. It provides a High-Level \
                    Crypto API for encryption, decryption, signing, signature \
                    verification and key management. Currently it uses GnuPG \
                    as its backend but the API isn't restricted to this engine \
                    in fact we have already developed a backend for CMS (S/MIME).

platforms           darwin

homepage            http://www.gnupg.org/related_software/gpgme/
master_sites        gnupg
use_bzip2           yes

checksums           rmd160  3159142bd912fe482566a78f48d19fe6a4d3221e \
                    sha256  71f55fed0f2b3eaf7a606e59772aa645ce3ffff322d361ce359951b3f755cc48

# either gnupg2 (the default) or gnupg21 is needed for running the unit tests
# and at runtime but does not link directly with gpgme
depends_build       port:pkgconfig \
                    bin:gpg2:gnupg2

# depends_lib         port:pth \
#                     port:libgpg-error \
#                     port:libassuan
depends_lib         port:libgpg-error \
                    port:libassuan

use_parallel_build  no

patchfiles          patch-tests-gpg-Makefile.am.diff

post-patch {
    reinplace "s|thread_modules=\"\"|thread_modules=\"pthread\"|" ${worksrcpath}/src/gpgme-config.in
    reinplace "s|@GPG@|${prefix}/bin/gpg2|" ${worksrcpath}/src/gpgme-config.in
    reinplace "s|@GPGSM@|${prefix}/bin/gpgsm|" ${worksrcpath}/src/gpgme-config.in
}

# enable cl cpp language bindings for now to avoid opportunistic failures (#52341)
# TODO: add bindings for python and qt

lappend languages cl

# cpp bindings require libc++

platform darwin {
    depends_run         path:bin/gpg2:gnupg2

    use_autoreconf      yes
    autoreconf.args     -fvi

    if {${configure.cxx_stdlib} eq "libc++"} {
        lappend languages cpp
    }
    post-configure {
        reinplace "s|CC -dynamiclib|CC -dynamiclib [get_canonical_archflags]|g" ${worksrcpath}/libtool
    }
}
platform linux {
    lappend languages cpp
}

configure.args      --enable-languages="${languages}" \
                    --enable-static \
                    --includedir=${prefix}/include/gpgme

test.run            yes
test.target         check

post-destroot {
    xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 -W ${worksrcpath} AUTHORS COPYING COPYING.LESSER \
        ChangeLog INSTALL NEWS README THANKS TODO \
        ${destroot}${prefix}/share/doc/${name}
    reinplace "s|/include/gpgme++|/include/gpgme/gpgme++|g" ${destroot}${prefix}/lib/cmake/Gpgmepp/GpgmeppConfig.cmake
    ln -s gpgme/gpgme.h ${destroot}${prefix}/include
}

livecheck.type      regex
livecheck.url       ftp://ftp.gnupg.org/gcrypt/gpgme/
livecheck.regex     "${name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
