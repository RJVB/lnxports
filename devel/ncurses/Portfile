# $Id: Portfile 140232 2015-09-13 10:45:12Z jeremyhu@macports.org $

PortSystem 1.0

name            ncurses
categories      devel
platforms       darwin freebsd
license         MIT
maintainers     jmr openmaintainer
description     emulation of curses in System V Release 4.0
long_description \
    The Ncurses (new curses) library is a free software emulation of    \
    curses in System V Release 4.0, and more. It uses Terminfo format,  \
    supports pads and color and multiple highlights and forms           \
    characters and function-key mapping, and has all the other          \
    SYSV-curses enhancements over BSD Curses.

homepage        http://www.gnu.org/software/ncurses/ncurses.html
master_sites    gnu

if {${subport} ne "${name}5"} {
    version     6.0
    checksums   rmd160 4d9e5938f00b400bfb0d37f3c54f2f36c4157d48 \
                sha256 f551c24b30ce8bfb6e96d9f59b42fbea30fa3a6123384172f9e7284bcf647260
    # hex.diff from http://opensource.apple.com/source/ncurses/ncurses-44/patches.applied/
#     patchfiles      hex.diff configure.diff
    configure.args  \
                --enable-widec \
                --disable-lib-suffixes \
                --enable-overwrite \
                --with-shared \
                --with-cxx-shared \
                --without-debug  \
                --without-ada \
                --with-manpage-format=normal \
                --enable-pc-files \
                --with-pkg-config-libdir="${prefix}/lib/pkgconfig"
}
platform linux {
    configure.args-append \
                --enable-rpath
}

# http://stackoverflow.com/questions/37475222/ncurses-6-0-compilation-error-error-expected-before-int
configure.cppflags -P
configure.ldflags
if {${os.platform} eq "darwin"} {
    configure.args-append \
                --disable-mixed-case
}

# Prevent -lstdc++ from creeping into the build when not needed
if {${os.platform} eq "darwin" && [string match *clang* ${configure.cxx}]} {
    configure.env-append \
        CXXLIBS=-stdlib=${configure.cxx_stdlib} \
        cf_cv_libstdcpp=no
}

if {[variant_isset universal]} {
    # check that this doesn't start breaking anything with new versions
    post-configure {
        reinplace s/1UL/1U/g "${worksrcpath}/include/curses.head"
        system -W ${worksrcpath} "ed - include/curses.head < ${filespath}/include_curses.head.ed"
    }
}

post-destroot {
    set major [lindex [split $version .] 0]
    if {${subport} eq "${name}5"} {
#         foreach f {captoinfo clear infocmp infotocap reset tabs tic toe tput tset} {
#             delete ${destroot}${prefix}/bin/${f}
#         }
#         foreach f {form menu ncurses ncurses++ panel} {
#             delete ${destroot}${prefix}/lib/lib${f}.dylib
#         }
#         delete -force ${destroot}${prefix}/include
#         delete -force ${destroot}${prefix}/lib/pkgconfig
#         delete -force ${destroot}${prefix}/lib/terminfo
#         delete -force ${destroot}${prefix}/lib/libcurses.dylib
#         foreach f [glob -nocomplain ${destroot}${prefix}/lib/*.a] {
#             delete ${f}
#         }
#         delete -force ${destroot}${prefix}/share
    } else {
        foreach f {form menu ncurses ncurses++ panel} {
            ln -s lib${f}.so.${major} ${destroot}${prefix}/lib/lib${f}w.so
            ln -s lib${f}.so.${major} ${destroot}${prefix}/lib/lib${f}w.${major}.so
            ln -s lib${f}.a ${destroot}${prefix}/lib/lib${f}w.a
            ln -s ${f}.pc ${destroot}${prefix}/lib/pkgconfig/${f}w.pc
        }
        ln -s libncurses.so.${major} ${destroot}${prefix}/lib/libtermcap.so
        ln -s ncurses${major}-config ${destroot}${prefix}/bin/ncursesw${major}-config
        # make really sure that the linker won't find the system version:
        reinplace "s|-l\$\{THIS\}|\$\{libdir\}/lib\$\{THIS\}.so|g" ${destroot}${prefix}/bin/ncurses${major}-config
        reinplace "s|-l\$\{TINFO_LIB\}|\$\{libdir\}/lib\$\{TINFO_LIB\}.so|g" ${destroot}${prefix}/bin/ncurses${major}-config
    }
}
