# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   conflicts_build 1.0
PortGroup                   locale_select 1.0

# Please keep the glib2 and glib2-devel ports as similar as possible.

name                        glib2
conflicts                   glib2-devel
set my_name                 glib
version                     2.56.2 ; revision 2
checksums                   rmd160  8fe9fd51a84ebe0f61b5cb2ab97325baa51c4eb3 \
                            sha256  d64abd16813501c956c4e123ae79f47f1b58de573df9fdd3b0795f1e2c1aa789
#                             size    8041756

set branch                  [join [lrange [split ${version} .] 0 1] .]
categories                  devel
maintainers                 {ryandesign @ryandesign} openmaintainer
license                     LGPL-2+
homepage                    https://wiki.gnome.org/Projects/GLib
platforms                   darwin
dist_subdir                 glib2
distname                    ${my_name}-${version}
use_xz                      yes
use_parallel_build          yes

description                 Library with data structure functions and other constructs

long_description            Glib is a library which includes support routines \
                            for C, such as lists, trees, hashes, memory \
                            allocation, and many other things.

master_sites                gnome:sources/${my_name}/${branch}/

patchfiles                  libintl.patch \
                            patch-glib-gmain.c.diff \
                            patch-glib_gunicollate.c.diff \
                            patch-linux-gio_xdgmime_xdgmime.c.diff \
                            patch-gio_gdbusprivate.c.diff \
                            patch-get-launchd-dbus-session-address.diff \
                            patch-gmodule-gmodule-dl.c.diff \
                            patch-configure-switch-for-gappinfo-impl.diff \
                            universal.patch \
                            which.patch
# try to avoid aborting when a gsettings key isn't found
patchfiles-append           patch-gsettings-tweak.diff

depends_build               port:autoconf \
                            port:automake \
                            port:libtool \
                            bin:xmllint:libxml2 \
                            port:pkgconfig

variant gettext description {build with port:gettext} {}
if {[variant_isset gettext]} {
    depends_build-append    port:gettext-dev
    depends_lib             port:gettext
    patchfiles-append       libintl.patch
} else {
#     conflicts_build-append  gettext-dev
    configure.env-append    LIBS="-L${prefix}/lib -lintl"
    build.env-append        LIBS="-L${prefix}/lib -lintl"
}

depends_lib                 port:libffi \
                            port:libiconv \
                            port:pcre \
                            port:zlib

if {![file exists ${worksrcpath}/config.log]} {
    configure.cmd           ./autogen.sh
}

if {[vercmp ${macosx_deployment_target} 10.9] < 0} {
    # GLib-CRITICAL **: attempting to free a locked GVariant instance.  This should never happen.
    compiler.blacklist-append   {clang < 318}
} else {
    # gcocoanotificationbackend.c:115:52: error: array subscript is not an integer
    compiler.blacklist-append   {clang < 600}
}

# https://bugzilla.gnome.org/show_bug.cgi?id=697017
compiler.blacklist-append   gcc-3.3 *gcc-4.0

platform darwin {
    # -lresolv is needed at least on Tiger PPC.
    configure.ldflags-append \
                            -lresolv \
                            -bind_at_load
}

configure.cflags-append     -fstrict-aliasing

configure.args              --disable-static \
                            --disable-compile-warnings \
                            --disable-gtk-doc \
                            --with-pcre=system \
                            ac_cv_prog_AWK=/usr/bin/awk \
                            ac_cv_prog_GTKDOC_CHECK= \
                            ac_cv_path_GTKDOC_CHECK_PATH= \
                            ac_cv_path_GTKDOC_MKPDF= \
                            ac_cv_path_GTKDOC_REBASE=
if {${os.platform} ne "darwin"} {
    configure.args-append   --with-libiconv=gnu
}

configure.perl              /usr/bin/perl
configure.python            /usr/bin/python
configure.env-append        PERL_PATH=${configure.perl}

variant static description {build static libraries too} {}
if {[variant_isset static]} {
    configure.args-replace  --disable-static \
                            --enable-static
}

post-patch {
    reinplace -W ${worksrcpath} "s|@PREFIX@|${prefix}|g" gio/gdbusprivate.c gio/xdgmime/xdgmime.c glib/gi18n-lib.h glib/gi18n.h
    reinplace "s|data_dirs = \"/usr|data_dirs = \"${prefix}/share:/usr|g" ${worksrcpath}/glib/gutils.c
    reinplace "s|path = \"/bin|path = \"${prefix}/bin:/bin|g" ${worksrcpath}/glib/gutils.c ${worksrcpath}/glib/gspawn.c
    reinplace "s|#! */usr/bin/env python|#!${configure.python}|g" ${worksrcpath}/glib/gtester-report
    reinplace "s|-Werror=missing-prototypes||" ${worksrcpath}/configure
}

post-configure {
    system "ed - ${worksrcpath}/config.h < ${filespath}/config.h.ed"
}
pre-build {
    # needed on Linux when building with clang?!
    # libtool can be regenerated during a build so do the reinplace in the
    # pre-build so that at least a subsequent build will succeed.
    reinplace -q "s|global_symbol_pipe=\"\"|global_symbol_pipe=\"cat\"|g" ${worksrcpath}/libtool
    if {[string match *clang* ${configure.cc}]} {
        # this is for building with -flto
        set llvmnm [string map {"clang-" "llvm-nm-"} ${configure.cc}]
        reinplace -q "s|${prefix}/bin/nm |${llvmnm} |g" ${worksrcpath}/libtool
    }
}

build.args                  V=1

test.run                    yes
test.target                 check

post-destroot {
    delete ${destroot}${prefix}/lib/charset.alias

    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 644 -W ${worksrcpath} AUTHORS COPYING ChangeLog HACKING NEWS \
        README ${destroot}${docdir}
    if {![file exists ${destroot}${prefix}/include/gio-unix-2.0/gio/gdesktopappinfo.h]} {
        xinstall -m 644 ${worksrcpath}/gio/gdesktopappinfo.h ${destroot}${prefix}/include/gio-unix-2.0/gio/gdesktopappinfo.h
    }
}

post-activate {
    if {[file exists /usr/share/glib-2.0/schemas]} {
        if {[catch {system "${prefix}/bin/glib-compile-schemas /usr/share/glib-2.0/schemas"} result]} {
            ui_warning "glib-compile-schemas failed on /usr/share/glib-2.0/schemas: ${result}"
        }
    }
    if {[catch {system "${prefix}/bin/glib-compile-schemas ${prefix}/share/glib-2.0/schemas"} result]} {
        ui_warning "glib-compile-schemas failed on ${prefix}/share/glib-2.0/schemas: ${result}"
    }
}

platform darwin {
    configure.args-append   --disable-dtrace
}

if {${os.platform} eq "darwin" && ${os.major} <= 10} {
    # Requires python 2.7 as of 2.53.4
    # See https://bugzilla.gnome.org/show_bug.cgi?id=785193
    depends_lib-append      port:python27
    configure.python        ${prefix}/bin/python2.7
}

variant quartz conflicts x11 {
    configure.args-append   --with-appinfo-impl=native
}

variant x11 conflicts quartz {
    configure.args-append   --with-appinfo-impl=generic
}

# if {![variant_isset quartz]} {
#     default_variants +x11
# }
# if {![variant_isset x11]} {
#     default_variants +quartz
# }
# if {![variant_isset quartz] && ![variant_isset x11]} {
#     pre-configure {
#         return -code error "Either +x11 or +quartz is required"
#     }
# }

variant docs description {Install the gtk-doc documentation for glib2} {}
if {![variant_isset docs]} {
    post-destroot {
        file delete -force ${destroot}${prefix}/share/gtk-doc
    }
    configure.args-append   --disable-gtk-doc-html
} else {
    configure.args-append   --enable-gtk-doc-html
}

livecheck.type              gnome
livecheck.name              ${my_name}
