# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           active_variants 1.1
PortGroup           github 1.0
platform darwin {
    PortGroup       gobject_introspection 1.0
}
PortGroup           LTO 1.0
PortGroup           locale_select 1.0

github.setup        lathiat avahi 0.8 v
categories          net devel
maintainers         nomaintainer
license             LGPL-2.1+
platforms           darwin
description         Avahi is an Implementation of the DNS Service Discovery and Multicast DNS \
                    specifications for Zeroconf Networking.

long_description    ${description} It uses D-Bus for communication between user applications and a \
                    system daemon. The daemon is used to coordinate application efforts in caching \
                    replies, necessary to minimize the traffic imposed on networks.

homepage            http://avahi.org/
github.tarball_from releases

checksums           rmd160  f060e7afbc20accc6befbbe6776d3ca7956b4962 \
                    sha256  060309d7a333d38d951bc27598c677af1796934dbd98e1024e7ad8de798fedda
#                     size    1591458

patchfiles          patch-configure.diff \
                    patch-initscript-darwin-org.freedesktop.avahi-daemon.plist.in.diff \
                    patch-initscript-darwin-org.freedesktop.avahi-dnsconfd.plist.in.diff

# ensure MacPorts machine-id from dbus is found
# see https://trac.macports.org/ticket/53894 for O_CLOEXEC
patchfiles-append   patch-avahi_daemon.diff

post-patch {
    # this preprocessor macro causes a lot of things to be undefined inside netinet/in.h system header.
    reinplace "s/-D_XOPEN_SOURCE=500//" ${worksrcpath}/configure

    # use correct location of dbus from patch-avahi_daemon.diff
    reinplace "s|__MACPORTS_PREFIX__|${prefix}|g" ${worksrcpath}/avahi-daemon/main.c
}

depends_build       port:pkgconfig \
                    port:intltool \
                    port:gettext-dev

depends_lib         port:expat \
                    port:gdbm \
                    port:gettext

platform darwin {
    depends_lib-append \
                    port:libdaemon
    gobject_introspection yes

    if {${os.platform} eq "darwin" && ${os.major} >= 9} {
        set avahi_user  _avahi
        set avahi_group _avahi
    } else {
        set avahi_user  avahi
        set avahi_group avahi
    }
    add_users ${avahi_user} group=${avahi_group} realname=Avahi\ Service
}
platform linux {
    set avahi_user  avahi
    set avahi_group avahi
}

# "Priviliged [sic] access group for Avahi clients"
# defaults to netdev
# macOS has no equivalent group
#     see https://wiki.ubuntu.com/Security/Privileges#Connect_to_wireless_and_ethernet_networks
#     see https://wiki.debian.org/SystemGroups
set avahi_priv_group netdev

configure.env-append \
                    "LIBS=-L${prefix}/lib -lintl"

configure.args      --disable-autoipd \
                    --disable-silent-rules \
                    --disable-qt3 \
                    --disable-qt4 \
                    --disable-qt5 \
                    --disable-mono \
                    --disable-monodoc \
                    --enable-compat-libdns_sd \
                    --enable-compat-howl \
                    --disable-gtk3 \
                    --disable-xmltoman \
                    --disable-gtk \
                    --disable-tests \
                    --with-avahi-priv-access-group=${avahi_priv_group} \
                    --with-avahi-user=${avahi_user} \
                    --with-avahi-group=${avahi_group}

platform linux {
    configure.args-append \
                    --enable-introspection=no \
                    --disable-python \
                    --disable-manpages
}

# __APPLE_USE_RFC_2292 should be removed once avahi is updated to support RFC 3542
configure.cppflags-append   -L${prefix}/lib

platform darwin {
    set daemon_uniquename   org.freedesktop.avahi-daemon
    set dnsconfd_uniquename org.freedesktop.avahi-dnsconfd

    startupitem.type    launchd
    startupitem.create  no
    startupitems        name        avahi-daemon \
                        location    LaunchDaemons \
                        uniquename  ${daemon_uniquename} \
                        plist       ${daemon_uniquename}.plist \
                        name        avahi-dnsconfd \
                        location    LaunchDaemons \
                        uniquename  ${dnsconfd_uniquename} \
                        plist       ${dnsconfd_uniquename}.plist

    post-destroot {
        foreach uniquename "${daemon_uniquename} ${dnsconfd_uniquename}" {
            xinstall -d -m 0755 ${destroot}${prefix}/etc/LaunchDaemons/${uniquename}
            move ${destroot}/Library/LaunchDaemons/${uniquename}.plist ${destroot}${prefix}/etc/LaunchDaemons/${uniquename}/
            if {${startupitem.install} && [geteuid] == 0} {
                ln -s ${prefix}/etc/LaunchDaemons/${uniquename}/${uniquename}.plist ${destroot}/Library/LaunchDaemons/
            } else {
                ln -s ${prefix}/etc/LaunchDaemons/${uniquename}/${uniquename}.plist ${destroot}${prefix}/etc/LaunchDaemons
            }
        }
    }
}

variant mono description {Enable Mono support} {
    depends_lib-append      port:mono \
                            port:gtk-sharp2

    configure.args-delete   --disable-mono

    platform darwin {
        post-patch {
            reinplace {s/\.so\.0/.0.dylib/} ${worksrcpath}/avahi-ui-sharp/avahi-ui-sharp.dll.config.in
        }
    }

    post-build {
        # TODO This shouldn't be needed, we need to fix Mono dllmap library path.
        reinplace -E "s|(target=\")|\\1${prefix}/lib/|" \
            ${worksrcpath}/avahi-sharp/avahi-sharp.dll.config \
            ${worksrcpath}/avahi-ui-sharp/avahi-ui-sharp.dll.config
    }
}

variant test description {Build tests} {
    configure.args-delete   --disable-tests
    configure.args-append   --enable-tests
    test.run            yes
    test.target         check
}

variant gtk description {Build with GTK2} {
    platform darwin {
        # assume we have everything on the host
        depends_lib-append      port:gtk2 \
                                port:libglade2
    }
    configure.args-replace      --disable-gtk \
                                --enable-gtk
}

variant gtk3 description {Build with GTK3} {
    depends_lib-append      port:gtk3

    configure.args-delete   --disable-gtk3
}

# default_variants +gtk +gtk3
default_variants +gtk

variant qt4 description {Build with Qt4} {
    PortGroup   qt4 1.0
    configure.args-delete   --disable-qt4
}

variant qt5 description {Build with Qt5} {
    PortGroup   qt5 1.0
    configure.args-delete   --disable-qt5
    compiler.cxx_standard   2011
    pre-configure {
        configure.env-append \
                            "QT5_CFLAGS=${configure.cxxflags} [exec pkg-config --cflags Qt5Core]"
    }
}

# just use python27 with no python variants

configure.python        ${prefix}/bin/python2.7

platform darwin {
    depends_lib-append      port:dbus-python27 \
                            port:py27-gdbm

    depends_lib-append      port:py27-gobject3
    configure.pkg_config_path-append ${frameworks_dir}/Python.framework/Versions/2.7/lib/pkgconfig

    # see https://trac.macports.org/ticket/55054
    pre-configure {
        configure.env-append PKG_CONFIG_PATH=[join ${configure.pkg_config_path} ":"]
        configure.pkg_config_path
    }

    variant x11 conflicts quartz {
        require_active_variants gtk2 x11 quartz
    }

    variant quartz conflicts x11 {
        require_active_variants gtk2 quartz x11
    }

    if {![variant_isset quartz]} {
        default_variants-append +x11
    }
}

platform linux {
    post-destroot {
        file rename ${destroot}${prefix}/etc/avahi/avahi-daemon.conf ${destroot}${prefix}/etc/avahi/avahi-daemon.conf.sample
        foreach c {1 2 3 4 5 6 7 8 9 l n} {
            foreach m [glob -nocomplain ${worksrcpath}/man/*.${c}] {
                xinstall -m 755 ${m} ${destroot}${prefix}/share/man/man${c}/
            }
        }
    }
    post-activate {
        if {![file exists ${prefix}/etc/avahi/avahi-daemon.conf]} {
            xinstall -m 755 ${prefix}/etc/avahi/avahi-daemon.conf.sample ${prefix}/etc/avahi/avahi-daemon.conf
        }
    }
}
