# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           gitlab 1.0
PortGroup           LTO 1.0

variant legacy conflicts rustup_build description {build only the older, pure C implementation} {}
platform darwin {
    default_variants +legacy
}
if {[variant_isset legacy]} {
    # placeholder variant
    variant rustup_build conflicts legacy {build using a private rust install} {}
} else {
    set rustup.disable_cargo yes
    PortGroup       rustup 1.0
}

# include the meson PG after potentially including the rust PG(s)
PortGroup           meson 1.0

gitlab.instance     https://gitlab.freedesktop.org
default gitlab.master_sites {${gitlab.homepage}/-/releases/${git.branch}/downloads}
fetch.type          git
gitlab.setup        mstoeckl waypipe e87a977cd80ab6fce9b4c0a6af071c4f0a270aff
version             0.10.3.3
distname            ${name}-git

categories          net graphics
maintainers         gmail.com:rjvbertin
license             GPL-3.0
# C-implementation is MIT-licensed
license             MIT
platforms           linux

depends_build-append \
                    port:pkgconfig

if {![variant_isset legacy]} {
    if {[variant_isset rustup_build]} {
        PortGroup   conflicts_build 1.0
        # meson finds cargo via the path, so the safest way to enforce using the rustup-installed
        # copy is to register a build conflict with port:cargo . NB: the rustup PG extends the PATH !
        conflicts_build-append \
                    cargo \
                    ffmpeg-dev
    }
}

description         a Wayland proxy
long_description    waypipe is a proxy for Wayland clients. It forwards Wayland messages and \
                    serialises changes to shared memory buffers over a single socket. This makes \
                    application forwarding similar to ssh -X feasible.\n\
                    By default this port builds the legacy wayland-c implementation written in C.

depends_lib-append  port:wayland \
                    port:mesa \
                    port:libva \
                    port:libdrm \
                    port:ffmpeg \
                    port:lz4 \
                    port:zstd
depends_build-append \
                    port:scdoc

configure.args-append \
                    -Dbuild_c=true \
                    -Dman-pages=enabled \
                    -Dwith_video=enabled \
                    -Dwith_dmabuf=enabled \
                    -Dwith_lz4=enabled \
                    -Dwith_zstd=enabled \
                    -Dwith_gbm=enabled \
                    -Dwith_vaapi=enabled 

if {[variant_isset legacy]} {
    configure.args-append \
                    -Dbuild_rs=false
} else {
    depends_build-append \
                    port:cmake \
                    port:shaderc
    depends_lib-replace \
                    port:ffmpeg \
                    port:ffmpeg6
    configure.ldflags-append \
                    -lwrapped_syscalls \
                    -Wl,-rpath,${prefix}/libexec/ffmpeg6/lib
    set env(PKG_CONFIG_PATH) \
                    ${prefix}/libexec/ffmpeg6/lib/pkgconfig
    configure.args-append \
                    --pkg-config-path ${prefix}/libexec/ffmpeg6/lib/pkgconfig \
                    -Dbuild_rs=true
    pre-configure {
        ui_msg "--->   Fetching rust stuff"
        system -notty -W ${worksrcpath} "${cargo.bin} fetch --locked"
        system -notty -W ${worksrcpath} "${cargo.bin} install --locked bindgen-cli"
    }
    pre-build {
        xinstall -m 755 -d ${build.dir}/target/meson-1-strip
        ln -sf ../${build_arch}-unknown-${os.platform}-gnu/meson-1-strip/waypipe ${build.dir}/target/meson-1-strip
    }
}

installs_libs       no

meson.save_configure_cmd "install log"

post-destroot {
    if {![file exists ${destroot}${prefix}/bin/waypipe]} {
        ln -s waypipe-c ${destroot}${prefix}/bin/waypipe
    }
}
