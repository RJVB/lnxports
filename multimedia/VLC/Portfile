# -*- coding: utf-8; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           active_variants 1.1

PortGroup           locale_select 1.0
PortGroup           LTO 1.0

name                VLC

categories          multimedia devel
maintainers         gmail.com:rjvbertin openmaintainer

description         VLC is a cross-platform media player and streaming server
long_description    VLC media player is a highly portable multimedia player for \
                    various audio and video formats (MPEG-1, MPEG-2, MPEG-4, DivX, \
                    mp3, ogg, ...) as well as DVDs, VCDs, and various streaming protocols. \
                    It can also be used as a server to stream in unicast or multicast \
                    in IPv4 or IPv6 on a high-bandwidth network.

homepage            https://www.videolan.org

subport lib${name} {
    maintainers     gmail.com:rjvbertin openmaintainer
    description     the core engine and interface to VLC's multimedia framework
    long_description \
                    libVLC is the core engine and the interface to the multimedia \
                    framework on which VLC media player is based.  It allows developers \
                    to create a wide range of multimedia applications using the VLC features.
    conflicts       ${name}
    homepage        http://www.videolan.org/vlc/libvlc.html
}

if {${subport} eq ${name}} {
    conflicts       lib${name}
}

### not to be committed in the mainstream port ###
##################################################

# VLC-2.1 and later are x86_64-only: https://trac.videolan.org/vlc/ticket/8161
universal_variant   no
supported_archs     x86_64

version             3.0.11
license             GPL-2

platforms           darwin

master_sites        https://download.videolan.org/pub/videolan/vlc/${version}/
dist_subdir         VLC
distname            vlc-${version}
use_xz              yes

checksums           rmd160  a9c6a8796d0d86a71b738d4d41c377cd03d0e4ce \
                    sha256  3e94a1acf33445e9da15d528aa48657aa26b912eaa2656b403d43860a8834919
#                     size    26041744

platform darwin {
    # Enable HFS compression of the workdir if the compress_workdir PortGroup is installed
    if {[file exists ${filespath}/../../../_resources/port1.0/group/compress_workdir-1.0.tcl]} {
        PortGroup   compress_workdir 1.0
    }
}

depends_build       port:pkgconfig

set vlcprefix       ${prefix}/libexec/vlc3
configure.pre_args-replace \
                    --prefix=${prefix} \
                    --prefix=${vlcprefix}
configure.args-append \
                    --bindir=${prefix}/bin
### not to be committed in the mainstream port ###
langselect_dirs_dir-append \
                    ${destroot}${vlcprefix}/share/locale
##################################################

platform darwin {
depends_lib-append  path:lib/libavcodec.diff:ffmpeg \
                    port:a52dec \
                    port:avahi \
                    port:bzip2 \
                    port:faad2 \
                    port:flac \
                    port:fluidsynth \
                    port:fontconfig \
                    port:freetype \
                    port:fribidi \
                    port:gettext \
                    path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    port:gmp \
                    port:gnutls \
                    port:jpeg \
                    port:lame \
                    port:libass \
                    port:libbluray \
                    port:libcddb \
                    port:libdc1394 \
                    port:libdca \
                    port:libdvbpsi \
                    port:libdvdnav \
                    port:libdvdread \
                    port:libebml \
                    port:libgcrypt \
                    port:libgpg-error \
                    port:libiconv \
                    port:libid3tag \
                    port:libidn \
                    port:libmad \
                    port:libmatroska \
                    port:libmodplug \
                    port:libmpcdec \
                    port:libmpeg2 \
                    port:libmtp \
                    port:libogg \
                    port:libopus \
                    port:libpng \
                    port:libproxy \
                    port:libsamplerate \
                    port:libsdl \
                    port:libsdl_image \
                    port:libsndfile \
                    port:libssh2 \
                    port:libtheora \
                    port:libupnp \
                    port:libusb \
                    port:libvorbis \
                    port:libvpx \
                    port:libxml2 \
                    port:live555 \
                    port:ncurses \
                    port:nettle \
                    port:openjpeg15 \
                    path:lib/libssl.dylib:openssl \
                    port:orc \
                    port:p11-kit \
                    port:readline \
                    port:schroedinger \
                    port:speex \
                    port:taglib \
                    port:tiff \
                    port:twolame \
                    port:x264 \
                    port:x265
depends_run-append  port:libaacs \
                    port:libbdplus

    # VLC calls ibtools which isn't part of the commandline tools
    use_xcode yes
    if {${os.major} < 13} {
        pre-fetch {
            ui_error "${name} ${version} requires Mac OS X 10.9 or greater."
            return -code error "incompatible Mac OS X version"
        }
    } elseif {${os.major} == 13} {
        macosx_deployment_target 10.10
        configure.args-append \
                    --with-macosx-version-min=10.9
        if {![catch {exec xcrun --show-sdk-path -sdk macosx10.10} result]} {
            ui_debug "Using SDK macosx10.10 : ${result}"
            configure.args-append \
                    --with-macosx-sdk=${result}
        }
        patchfiles-append \
                    patch-build-on-darwin13.diff
    }
    if {${os.major} <= 15} {
        post-extract {
            xinstall -m 755 -d ${worksrcpath}/include/os
            xinstall -m 755 ${filespath}/lock.h ${worksrcpath}/include/os/lock.h
        }
        # make the code build on 10.11 and earlier
        ## TODO: remove the entire 10.14+ block on 10.13 and earlier instead of trying to get it to build
        ##       and not use it.
        patchfiles-append \
                    patch-build-on-pre-1012.diff
    }
}

platform linux {
# platform dependencies for Ubuntu 14.04 :
# liba52-0.7.4-dev libaa1-dev libasound2-dev libass-dev libavahi-client-dev libavc1394-dev
# libbluray-dev libcaca-dev libcddb2-dev libcdio-dev libchromaprint-dev libcrystalhd-dev
# libdc1394-22-dev libdca-dev libdirac-dev libdirectfb-dev libdvbpsi-dev libdvdnav-dev
# libdvdread-dev libfaad-dev libflac-dev libfreerdp-dev libfreetype6-dev
# libfribidi-dev libgl1-mesa-dev libgtk2.0-dev libidn11-dev libiso9660-dev
# libjack-dev libkate-dev liblircclient-dev liblivemedia-dev liblua5.2-dev libmad0-dev
# libmatroska-dev libmodplug-dev libmpcdec-dev libmpeg2-4-dev libmtp-dev libncursesw5-dev
# libnotify-dev libogg-dev libomxil-bellagio-dev libopus-dev libpng-dev libpulse-dev
# libqt4-dev libraw1394-dev libresid-builder-dev librsvg2-dev libsamplerate0-dev
# libschroedinger-dev libsdl-image1.2-dev libsdl1.2-dev libshout3-dev libsidplay2-dev
# libsmbclient-dev libspeex-dev libspeexdsp-dev libssh2-1-dev libtag1-dev libtar-dev
# libtheora-dev libtwolame-dev libudev-dev libupnp-dev libv4l-dev libva-dev libvcdinfo-dev
# libvdpau-dev libvorbis-dev libx11-dev libx264-dev libxcb-composite0-dev libxcb-keysyms1-dev
# libxcb-randr0-dev libxcb-shm0-dev libxcb-xv0-dev libxcb1-dev libxext-dev libxinerama-dev
# libxml2-dev libxpm-dev libzvbi-dev lua5.2 oss4-dev zlib1g-dev
#
# from  ppa:rjvbertin/misc :
# libavcodec-ffmpeg-opti-dev
# libavformat-ffmpeg-opti-dev
# libpostproc-ffmpeg-opti-dev
# libswscale-ffmpeg-opti-dev
depends_lib-append  port:libdvdread \
                    port:libdvdnav \
                    port:gnutls \
                    port:fluidsynth \
                    port:libsndio \
                    port:portaudio \
                    port:libaacs \
                    port:libdvbpsi \
                    port:libbdplus \
                    port:soxr \
                    port:libsecret \
                    port:libmodplug \
                    port:libebml
configure.ldflags-append \
                    -Wl,-rpath=${vlcprefix}/lib
configure.args-append \
                    --enable-rpath \
                    --enable-dependency-tracking \
                    --disable-vdpau
variant vdpau description {enable VDPAU support} {
    configure.args-replace \
                    --disable-vdpau \
                    --enable-vdpau
}
pre-configure {
    if {[file exists /usr/lib/libvlccore.so] || [file exists /usr/lib/libvlc.so]} {
        ui_error "Uninstall the host libvlc-dev and/or libvlccore-dev packages or their equivalent"
        return -code error "Conflicting libraries /usr/lib/libvlc.so and/or /usr/lib/libvlccore.so are present"
    }
}

if {${configure.compiler} eq "macports-clang-5.0"} {
    # work around what is undoubtedly a bug in clang5 on Linux
    patchfiles-append   patch-atomic-for-clang5.diff
}
}

pre-fetch {
    if {${os.platform} eq "darwin" && ${os.major} < 10} {
        ui_error "${name} ${version} requires Mac OS X 10.6 or greater."
        return -code error "incompatible Mac OS X version"
    }
}

depends_lib-append  port:lua

# VLC doesn't currently build for me using port:clang-3.8
compiler.blacklist-append \
                    gcc-4.2 llvm-gcc-4.2 macports-clang-3.8 {clang < 300}

patchfiles-append   configure.ac-no-arch.patch \
                    patch-soundfont-path.diff

if {![info exists replaced_by]} {
    post-patch {
        if {[string match *clang* ${configure.cxx}] && ${configure.cxx_stdlib} == "libc++"} {
            reinplace "s:-lstdc\+\+:-lc++:" \
                ${worksrcpath}/modules/access/Makefile.am
        }

        reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/modules/codec/fluidsynth.c
    }
}

configure.post_args-append "|& tee -a ${workpath}/.macports.${subport}@${version}.configure.log'"
pre-configure {
    set cmd [join "${configure.cmd} ${configure.pre_args} ${configure.args}"]
    configure.pre_args-prepend "-cf '${configure.cmd} "
    configure.cmd "/bin/csh"
    ui_debug "configure command set to `cmd=${configure.cmd} pre_args=${configure.pre_args} args=${configure.args} post_args=${configure.post_args}`"
    system "echo '## ${cmd}' > ${workpath}/.macports.${subport}.configure.log"
}

# do autoreconf only the first time around
use_autoreconf      [expr ![file exists ${worksrcpath}/config.status]]
autoreconf.cmd      ./bootstrap
autoreconf.pre_args
autoreconf.args
depends_build-append port:libtool port:autoconf port:automake
configure.env-append \
                    "CPP=${configure.cc} -E" \
                    "CXXCPP=${configure.cxx} -E" \
                    "MATROSKA_CFLAGS=${prefix}/include/ebml" \
                    "MATROSKA_LIBS=-lmatroska -lebml"
build.args-append   DESTDIR=${worksrcpath}/dest_ignore V=1 -k

# gl.c:121:3: error: Platform not recognized.
configure.cppflags-append -D__unix__=1 -Wno-unknown-pragmas

platform darwin {
    # live555 is installed to a weird location
    configure.cppflags-append -I${prefix}/lib/live/liveMedia/include
}

build.target        all
destroot.target     install

livecheck.url       https://download.videolan.org/pub/videolan/vlc/
livecheck.regex     <a href=\"(\\d\[\\d|\.|\\w\]+).*/\">

# Other
configure.args-append \
                    --with-contrib=${worksrcpath}/contrib \
                    --disable-debug --disable-update-check --enable-gnutls \
                    --disable-notify --disable-dbus --enable-lua \
                    --disable-sparkle

# Input Plugins
configure.args-append \
                    --enable-dvdnav --enable-dvdread --disable-smbclient \
                    --disable-realrtsp \
                    --disable-freerdp --disable-opencv --enable-sftp

# Mux/Demux Plugins
configure.args-append \
                    --enable-dvbpsi --enable-ogg \
                    --enable-mod --enable-mpc --disable-shout

# Codec Plugins
configure.args-append \
                    --enable-a52 --enable-faad --enable-flac --enable-live555 \
                    --enable-opus --enable-vorbis --enable-ogg --enable-mad --enable-libass \
                    --enable-dca --enable-png --enable-twolame \
                    --enable-speex --enable-theora --enable-x264 --enable-x265 --enable-postproc \
                    --disable-gst-decode --enable-avcodec --enable-avformat --enable-swscale \
                    --enable-fluidsynth --enable-schroedinger --enable-vpx

# Video Plugins. We do our best to deactivate X11 and disable its auto-detection by
# claiming the headers and libs are somewhere they're not.
configure.args-append \
                    --disable-caca --enable-sdl-image \
                    --without-x --disable-xcb --disable-xvideo \
                    --x-includes=${destroot} --x-libraries=${destroot} \
                    --enable-freetype --enable-fontconfig --enable-fribidi \
                    --disable-svg --disable-svgdec --disable-wayland --enable-gles2

# Audio Plugins
configure.args-append \
                    --disable-jack \
                    --enable-samplerate \
                    --disable-pulse \
                    --disable-chromaprint

# Interface Plugins
configure.args-append \
                    --disable-vlc \
                    --disable-macosx \
                    --disable-qt \
                    --enable-ncurses \
                    --disable-skins2 \
                    --disable-vnc

# Visualisations and Video Filter Plugins
configure.args-append \
                    --disable-goom

# Service Discovery Plugins
configure.args-append \
                    --enable-upnp

# 20150209: Jack really would require a newer variant than what's currently in MacPorts
variant jack description {Enable jack plugin for audio output} {
    depends_lib-append      port:jack port:portaudio
    configure.args-delete   --disable-jack
    configure.args-append   --enable-jack
}

variant dbus description {Enable DBus support} {
#         depends_lib-append      port:dbus
    configure.args-replace  --disable-dbus --enable-dbus
}
default_variants-append     +dbus

variant svg description {Enable SVG rendering and decoding support} {
#         depends_lib-append      port:librsvg
    configure.args-replace  --disable-svg --enable-svg
    configure.args-replace  --disable-svgdec --enable-svgdec
}

variant shout description {Enable Shoutcast/Icecast streaming output support} {
#         depends_lib-append      port:libshout2
    configure.args-replace  --disable-shout --enable-shout
}

variant smb description {Enable Samba 3 input support} {
#         depends_lib-append      port:samba3
    configure.args-replace  --disable-smbclient --enable-smbclient
#         configure.ldflags-append    -L${prefix}/lib/samba3
}

variant pulse description {Enable PulseAudio support} {
#         depends_lib-append      port:pulseaudio
    configure.args-replace  --disable-pulse --enable-pulse
}
default_variants-append     +pulse

variant x11 {
#     depends_lib-append \
#         port:xorg-libX11 \
#         port:xorg-libXau \
#         port:xorg-libXdmcp \
#         port:xorg-libXext \
#         port:xorg-libXrandr \
#         port:xorg-libxcb \
#         port:xrender \
#         port:XviD \
#         port:mesa \
#         port:xorg-libXinerama \
#         port:xorg-libXv \
#         port:xorg-libXxf86vm \
#         port:xorg-xcb-util \
#         port:xorg-xcb-util-keysyms

    configure.args-delete   --without-x --disable-xvideo --disable-xcb \
                            --x-includes=${destroot} --x-libraries=${destroot}
    configure.args-append   --with-x --enable-xvideo --enable-xcb
}
default_variants-append     +x11

if {${subport} ne "lib${name}"} {
    variant qt5 conflicts qt4 description {Build using Qt5 UI. Experimental and probably dysfunctional} {
        patchfiles-append       patch-vlc-qt-configureac.diff \
                                patch-vlc-qt-x11.diff

        configure.args-replace  --disable-vlc --enable-vlc
        configure.args-replace  --disable-qt --enable-qt

        PortGroup               qt5 1.0
    }
}

variant quartz {
#     depends_lib-delete      port:libsamplerate
#     depends_lib-append      port:BGHUDAppKit
#
#     patchfiles-append       patch-vlc-for-macports.diff
#
#     configure.args-delete   --enable-samplerate \
#                             --disable-realrtsp
#     if {${subport} ne "lib${name}"} {
#         configure.args-replace  --disable-macosx --enable-macosx
#     }
#     # taken from VLC's own configure.sh script for OS X:
#     configure.args-append   --disable-samplerate \
#                             --enable-merge-ffmpeg \
#                             --enable-realrtsp
}

# FreeRDP currently doesn't build with CMake >= 3.1 (#47389)
variant freerdp description {Build the FreeRDP support; currently dysfunctional} {
#         depends_lib-append          port:FreeRDP
    # access/rdp.c:45:11: fatal error: 'freerdp/version.h' file not found
    configure.cppflags-append   -DFREERDP_INTERFACE_VERSION \
                                -DFREERDP_VERSION_MAJOR=1 \
                                -DFREERDP_VERSION_MINOR=1
    configure.args-replace      --disable-freerdp --enable-freerdp
}

variant huge \
    requires jack shout svg \
    description {Enable all variants except quartz, smb, freerdp and x11} {}

if {${subport} ne "lib${name}"} {
    variant full \
        requires huge quartz smb \
        description {Enable all variants except x11 (and except freerdp, currently)} {}
} else {
    variant full \
        requires huge quartz smb \
        description {Enable all variants except x11 (and except freerdp, currently)} {}
}

patchfiles-append           patch-for-lua53.diff

platform darwin {
    default_variants-append +quartz
    if {${os.major} <= 15} {
        default_variants-append +qtkit
    }

    patchfiles-append       patch-use-NSGetEnviron.diff \
                            patch-no-@rpath.diff

    if {![info exists replaced_by]} {
        post-patch {
            reinplace "/Sparkle.framework/d" \
                ${worksrcpath}/extras/package/macosx/vlc.xcodeproj/project.pbxproj
            reinplace "/SDKROOT/d" \
                ${worksrcpath}/extras/package/macosx/vlc.xcodeproj/project.pbxproj
            reinplace "/Growl.framework/d" \
                ${worksrcpath}/extras/package/macosx/package.mak

            reinplace "s:LD_LIBRARY_PATH:DYLD_LIBRARY_PATH:g" \
                ${worksrcpath}/Makefile.am

            if {![file exists ${worksrcpath}/contrib/BGHUDAppKit.framework]} {
                ln -s ${frameworks_dir}/BGHUDAppKit.framework ${worksrcpath}/contrib/BGHUDAppKit.framework
            }

            # To trick configure
            file mkdir "${worksrcpath}/contrib/lib"
        }
    }

    post-destroot {
        file delete {*}[glob ${destroot}${vlcprefix}/lib/vlc/plugins/*/*.la]

        if {[variant_isset quartz]} {
            if {${subport} ne "lib${name}"} {
                copy ${worksrcpath}/VLC.app ${destroot}${applications_dir}/VLC.app

                # These are already in ${prefix}, so we don't need to bundle them as well
                delete ${destroot}${applications_dir}/VLC.app/Contents/Frameworks
                delete ${destroot}${applications_dir}/VLC.app/Contents/lib

                # There's no need to install these into the bundle and the prefix
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/include
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/lib
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/plugins
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/share/locale
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/share/lua

                # http://trac.macports.org/ticket/35131
                xinstall -m 755 -d ${destroot}${applications_dir}/VLC.app/Contents/MacOS/lib
                foreach l [glob -nocomplain ${destroot}${vlcprefix}/lib/*] {
                    ln -s ${vlcprefix}/lib/[file tail ${l}] ${destroot}${applications_dir}/VLC.app/Contents/MacOS/lib
                }
                ln -s ${vlcprefix}/lib/vlc/plugins ${destroot}${applications_dir}/VLC.app/Contents/MacOS/plugins
                ln -s ${vlcprefix}/lib/vlc/lua ${destroot}${applications_dir}/VLC.app/Contents/MacOS/share/lua
                foreach d [glob -nocomplain ${destroot}${vlcprefix}/share/locale/*] {
                    set locale [file tail ${d}]
                    set ldir ${destroot}${applications_dir}/VLC.app/Contents/MacOS/share/locale/${locale}/LC_MESSAGES
                    xinstall -m 755 -d ${ldir}
                    foreach m [glob -nocomplain ${d}/LC_MESSAGES/*] {
                        ln -s ${vlcprefix}/share/locale/${locale}/LC_MESSAGES/[file tail ${m}] ${ldir}/
                    }
                }

                # the vlc executable needs to be started with a full path to the app bundle executable
                # or else the Mac OS X interface will hang beyond even a ^C or ^\ :
                move ${destroot}${prefix}/bin/vlc ${destroot}${prefix}/bin/vlc.exe
                system "echo \"#!/bin/sh\nexec \\\"${applications_dir}/VLC.app/Contents/MacOS/VLC\\\" \\\"\\\$\@\\\"\" > ${destroot}${prefix}/bin/vlc"
                system "chmod 755 ${destroot}${prefix}/bin/vlc"
            } else {
                delete ${destroot}${prefix}/bin
                delete ${destroot}${vlcprefix}/share/applications
                delete ${destroot}${vlcprefix}/share/man
            }
        }
        reinplace "s|prefix=${prefix}|prefix=${vlcprefix}|g" \
                ${destroot}${vlcprefix}/lib/pkgconfig/libvlc.pc \
                ${destroot}${vlcprefix}/lib/pkgconfig/vlc-plugin.pc
    }
    post-activate {
        system "${vlcprefix}/lib/vlc/vlc-cache-gen ${vlcprefix}/lib/vlc"
    }
}
platform linux {
    post-patch {
        # To trick configure
        file mkdir "${worksrcpath}/contrib/lib"
    }
    post-destroot {
        file delete {*}[glob ${destroot}${vlcprefix}/lib/vlc/plugins/*/*.la]
        xinstall -m 755 -d ${destroot}${prefix}/share/kde4/apps/solid
        file rename ${destroot}/usr/share/kde4/apps/solid/actions ${destroot}${prefix}/share/kde4/apps/solid/
        foreach d [glob -nocomplain ${destroot}${prefix}/share/kde4/apps/solid/*.desktop] {
            reinplace "s|Exec=vlc|Exec=${prefix}/bin/vlc|g" ${d}
        }
    }
}

# VLC does relinking during installation, so doing that in parallel should speed up things
destroot.post_args-append \
                -kj${build.jobs}

notes-append "MIDI support requires installing one or more SoundFont files,\
    in ${prefix}/share/sounds/sf2, for instance from port:generaluser-soundfont."

# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax Tcl/Tk; tab-indents true; tab-width 4;
