# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 140531 2015-09-21 23:39:33Z eborisch@macports.org $

PortSystem          1.0
PortGroup           select 1.0

name                python27
epoch               2
if {${os.platform} eq "linux"} {
#     This port is too complicated to get right on Linux, adding in the fact
#     that Python itself doesn't really support building in a non-default
#     prefix there (rpath hacks required).
#     Thus, we just install a wrapper to the system python2.7 that prepends
#     our own site-packages directory to the path.
    maintainers     gmail.com:rjvbertin
    version         [exec /usr/bin/python2.7 -c "import sys ; print '%d.%d.%d' %(sys.version_info.major,sys.version_info.minor,sys.version_info.micro)"]
} else {
    # Remember to keep py27-tkinter and py27-gdbm's versions sync'd with this
    version             2.7.10
    revision            3
}

set major           [lindex [split $version .] 0]
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          lang
license             PSF
platforms           darwin linux

maintainers-append  jwa openmaintainer

description         An interpreted, object-oriented programming language
long_description    Python is an interpreted, interactive, object-oriented \
                    programming language.

homepage            http://www.python.org/

if {${os.platform} eq "linux"} {
    depends_run     port:python_select \
                    port:python2_select
    set pythonNoDot python[string map {. {}} $branch]
    select.entries  [list python python-$pythonNoDot $pythonNoDot] \
                    [list python2 python2-$pythonNoDot $pythonNoDot]

    distfiles
    installs_libs   no
    supported_archs noarch
    use_configure   no
    build           {}
    destroot {
        xinstall -m 755 ${filespath}/python-wrapper.sh ${destroot}${prefix}/bin/python${branch}
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}${prefix}/bin/python${branch}
        reinplace "s|@SUFFIX@|${branch}|g" ${destroot}${prefix}/bin/python${branch}
        reinplace "s|@BRANCH@|${branch}|g" ${destroot}${prefix}/bin/python${branch}
        xinstall -m 755 ${filespath}/python-wrapper.sh ${destroot}${prefix}/bin/python${major}
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}${prefix}/bin/python${major}
        reinplace "s|@SUFFIX@|${major}|g" ${destroot}${prefix}/bin/python${major}
        reinplace "s|@BRANCH@|${branch}|g" ${destroot}${prefix}/bin/python${major}
        xinstall -m 755 -d ${destroot}${prefix}/lib/python${branch}/site-packages
        touch ${destroot}${prefix}/lib/python${branch}/site-packages/placeholder
    }
} else {

# the original portfile payload. Still contains some modifications to make it build on Linux

master_sites        ${homepage}ftp/python/${version}/

distname            Python-${version}
use_xz              yes

checksums           rmd160  eb003de9bb52fc2c6a2d2e3dcb816ba0c56751d0 \
                    sha256  1cd3730781b91caf0fa1c4d472dc29274186480161a150294c42ce9b5c5effc0

if {${os.platform} eq "darwin"} {
    patchfiles      patch-Makefile.pre.in.diff \
                    patch-setup.py.diff \
                    patch-setup.py-disabled_modules.diff \
                    patch-Lib-cgi.py.diff \
                    patch-Lib-ctypes-macholib-dyld.py.diff \
                    patch-configure.diff \
                    patch-libedit.diff \
                    patch-Include-pyport.h.diff \
                    omit-local-site-packages.patch
    depends_lib     port:gettext \
                    port:zlib \
                    path:lib/libssl.dylib:openssl \
                    port:sqlite3 \
                    port:db48 \
                    port:ncurses \
                    port:bzip2 \
                    port:libedit
} else {
    PortGroup       compiler_blacklist_versions 1.0
    compiler.blacklist-append \
    				cc
    compiler.whitelist-append \
    				clang
    patchfiles      patch-Makefile.pre.in.diff \
                    patch-setup.py.diff \
                    patch-setup.py-disabled_modules.diff \
                    patch-Lib-cgi.py.diff \
                    patch-Lib-ctypes-macholib-dyld.py.diff \
                    patch-libedit.diff \
                    patch-Include-pyport.h.diff \
                    omit-local-site-packages.patch
}

depends_run         port:python_select \
                    port:python2_select

if {${os.platform} eq "darwin"} {
    # disable-ipv6 for now, getaddrinfo-function missing
    configure.args  --enable-framework=${frameworks_dir} \
                    --enable-ipv6
} else {
    # emit --enable-shared instead of --enable-framework
    configure.args  --enable-shared \
    				--enable-ipv6
}

configure.cppflags-append -I${prefix}/include/db48
configure.ldflags-append -L${prefix}/lib/db48
if {${os.platform} eq "linux"} {
    configure.ldflags-append -Wl,-R,${prefix}/lib/db48
}

configure.ccache    no

# signed integer overflow is normally undefined as per the C spec, but python
# needs it to be defined as twos-complement
configure.cflags-append -fwrapv

post-patch {
    reinplace "s|@@PREFIX@@|${prefix}|g" \
        ${worksrcpath}/Lib/cgi.py \
        ${worksrcpath}/Lib/ctypes/macholib/dyld.py
    reinplace "s|@@APPLICATIONS_DIR@@|${applications_dir}|" \
        ${worksrcpath}/configure

    # See https://trac.macports.org/changeset/37861
    reinplace "s|xargs -0 rm -r|/usr/bin/xargs -0 /bin/rm -r|g" \
        ${worksrcpath}/Mac/PythonLauncher/Makefile.in
}

post-configure {
    reinplace "s;/* #undef PY_FORMAT_LONG_LONG */;#define PY_FORMAT_LONG_LONG \"ll\";" pyconfig.h
    if {${os.platform} eq "linux"} {
        reinplace "s|-L. -lpython\$\(VERSION\)|\$\(LDLIBRARY\)|g" ${worksrcpath}/Makefile
    }
}

build.target        all

test.run            yes
test.target         test

destroot.target     frameworkinstall maninstall

# ensure that correct compiler is used
build.args-append   MAKE="${build.cmd} CC=${configure.cc}"
destroot.args-append MAKE="${destroot.cmd} CC=${configure.cc}"

set pythonNoDot python[string map {. {}} $branch]
select.entries      [list python python-$pythonNoDot $pythonNoDot] \
                    [list python2 python2-$pythonNoDot $pythonNoDot]

notes "
To make this the default Python or Python 2 (i.e., the version run by\
the 'python' or 'python2' commands), run one or both of:

    sudo port select --set python $pythonNoDot
    sudo port select --set python2 $pythonNoDot
"

post-destroot {
    set framewpath ${frameworks_dir}/Python.framework
    set framewdir  ${framewpath}/Versions/${branch}

    foreach dir { Headers Resources Python Versions/Current } {
        file delete ${destroot}${framewpath}/${dir}
    }

    if {![file exists ${destroot}${prefix}/share/man/man1/]} {
        ln -s ${framewdir}/share/man/man1/python${branch}.1 ${destroot}${prefix}/share/man/man1/
    }
    if {[file exists ${framewdir}/Python ]} {
        ln -s ${framewdir}/Python ${destroot}${prefix}/lib/libpython${branch}.dylib
    }

    foreach unversionedFile {2to3 2to3-2 idle idle2 pydoc pydoc2 python python2 python-config python2-config pythonw pythonw2 smtpd.py smtpd2.py} {
        delete ${destroot}${prefix}/bin/${unversionedFile}
    }

    # remove -arch flags from the config
    if {${os.platform} eq "darwin"} {
        reinplace -E {s|-arch [a-z0-9_]+||g} \
            ${destroot}${framewdir}/lib/python${branch}/config/Makefile \
            ${destroot}${framewdir}/lib/python${branch}/_sysconfigdata.py
    }
}

platform darwin {
    post-patch {
		if {![file exists /usr/lib/libSystemStubs.a]} {
			reinplace s/-lSystemStubs//g ${worksrcpath}/configure
		}
    }
}

variant readline description {Use readline instead of libedit} {
    patchfiles-delete       patch-libedit.diff
    depends_lib-append      port:readline
    depends_lib-delete      port:libedit
}

variant universal {
    # This patch will need updating when 2.7.6 is released, as ARCH_RUN_32BIT
    # will once again be used for something. See ticket #39270.
    patchfiles-append patch-configure-universal.diff
    post-patch {
        reinplace \
            "s|__UNIVERSAL_ARCHFLAGS__|${configure.universal_cflags}|" \
            ${worksrcpath}/configure
    }
    if {${configure.sdkroot} != ""} {
        configure.args-append   --enable-universalsdk=${configure.sdkroot}
    } else {
        configure.args-append   --enable-universalsdk=/
    }
}

variant ucs4 description {Enable support for UCS4} {
    configure.args-append   --enable-unicode=ucs4
}

livecheck.type          regex
#livecheck.url           ${homepage}download/releases/
livecheck.url           ${homepage}downloads/
livecheck.regex         Python (${branch}(?:\\.\\d+)*)

}