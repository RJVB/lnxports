# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github          1.0
PortGroup           select          1.0
PortGroup           wxWidgets       1.0
PortGroup           LTO             1.0
PortGroup           preserve_runtime_libraries 1.0
PortGroup           muniversal      1.0
PortGroup           cmake           1.1

cmake.save_configure_cmd "log too"

github.setup        wxWidgets wxWidgets b383d539b5867828049d2e98d305867442f06003
fetch.type          git
# v3.1.2-916-gb383d539b5
version             3.1.2.916

set shortversion    3.1

name                wxWidgets-${shortversion}
wxWidgets.use       wxWidgets-${shortversion}

# set wxtype          osx_cocoa
set wxtype          gtk2

set branch          [join [lrange [split ${version} .] 0 1] .]

categories          graphics devel
platforms           darwin
license             wxwidgets-3.1
maintainers         {mojca @mojca} openmaintainer

description         C++ framework for cross-platform GUI development
long_description    wxWidgets ${branch} is an open-source cross-platform C++ \
                    GUI framework for Mac OS, Unix, Linux, Windows.

homepage            http://www.wxwidgets.org/

#checksums           rmd160  2fa5164dad43063274e72cc13626fdb90107a8a7 \
#                    sha256  8268f9ee24f37556b5ee6642801b121a85e053390eeab07ffc250a49dbc346cc \
#                    size    20042631

distname            wxWidgets-git
dist_subdir         wxWidgets/${version}

set selectdir       ${workpath}/select
select.group        wxWidgets
select.file         ${selectdir}/${subport}

compiler.c_standard   2011
compiler.cxx_standard 2011

depends_lib-append  path:include/turbojpeg.h:libjpeg-turbo \
                    port:tiff \
                    port:libpng \
                    port:zlib \
                    port:libiconv \
                    port:expat
platform linux {
    depends_build-append \
                    port:tiff-dev
}

depends_run         port:wxWidgets-common \
                    port:wxWidgets_select

# patchfiles          patch-configure.diff \
patchfiles          patch-relax-buildoption-check.diff

post-patch {
    reinplace "s|@@PREFIX@@|${prefix}|g" ${patch.dir}/configure

    file mkdir ${selectdir}
    system "echo \"${wxWidgets.wxdir}/wx-config\n${wxWidgets.wxdir}/wxrc-${branch}\" > ${select.file}"
}

platform darwin {
    cmake.install_prefix ${wxWidgets.prefix}
    configure.args-append \
                    -DwxBUILD_TOOLKIT=${wxtype} \
                    -DwxUSE_LIBICONV=sys \
                    -DwxUSE_LIBJPEG=sys \
                    -DwxUSE_LIBTIFF=sys \
                    -DwxUSE_LIBPNG=sys \
                    -DwxUSE_ZLIB=sys \
                    -DwxUSE_OPENGL=ON \
                    -DwxUSE_LIBSDL=OFF \
                    -DwxUSE_AUI=ON \
                    -DwxUSE_DISPLAY=ON \
                    -DwxUSE_XRC=ON \
                    -DwxUSE_GRAPHICS_CONTEXT=ON \
                    -DwxBUILD_STRIPPED_RELEASE_DEFAULT=OFF \
                    -DwxBUILD_CXX_STANDARD=11

    if { ${os.major} == 11 } {
        if {[tbool use_autoconf]} {
            # https://trac.macports.org/ticket/58040
            configure.args-replace --with-macosx-sdk=no \
                            --with-macosx-sdk=${developer_dir}/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk
            configure.args-replace --with-macosx-version-min=no \
                            --with-macosx-version-min=${macosx_deployment_target}
        } else {
            configure.sdkroot \
                            ${developer_dir}/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk
        }
    }

    # during the test period we could afford to disable compatibility to 3.0
    # to detect the problems earlier
    #
    # for the moment provide a variant to allow testing *with* compatibility turned on
    variant compat30 description {enable wxWidgets 3.0 compatibility (will become default)} {
        if {[tbool use_autoconf]} {
            configure.args-replace \
                    --disable-compat30 \
                    --enable-compat30
        } else {
            configure.args-append \
                    -DwxBUILD_COMPATIBILITY=3.0
        }
    }
}
platform linux {
    cmake.install_prefix ${wxWidgets.prefix}
    configure.args-append \
                    -DwxBUILD_TOOLKIT=${wxtype} \
                    -DwxUSE_LIBICONV=sys \
                    -DwxUSE_LIBJPEG=sys \
                    -DwxUSE_LIBTIFF=sys \
                    -DwxUSE_LIBPNG=sys \
                    -DwxUSE_ZLIB=sys \
                    -DwxUSE_OPENGL=ON \
                    -DwxUSE_LIBSDL=OFF \
                    -DwxUSE_AUI=ON \
                    -wxUSE_UNICODE=ON \
                    -DwxUSE_DISPLAY=ON \
                    -DwxUSE_XRC=ON \
                    -DwxUSE_GRAPHICS_CONTEXT=ON \
                    -DwxBUILD_STRIPPED_RELEASE_DEFAULT=OFF \
                    -DwxBUILD_CXX_STANDARD=11
    configure.args-append \
                    -DwxUSE_DETECT_SM=ON \
                    -DwxUSE_SECRETSTORE=ON \
                    -DwxBUILD_PRECOMP=OFF \
                    -DwxBUILD_SAMPLES=SOME

    variant compat30 description {enable wxWidgets 3.0 compatibility (will become default)} {
        if {[tbool use_autoconf]} {
            configure.args-replace \
                    --disable-compat30 \
                    --enable-compat30
        } else {
            configure.args-append \
                    -DwxBUILD_COMPATIBILITY=3.0
        }
    }
    variant gtk3 description {build against GTk 3 instead of GTk 2} {
        set wxtype  gtk3
        if {[tbool use_autoconf]} {
            configure.args-replace \
                    --with-gtk=2 \
                    --with-gtk=3
        } else {
            depends_lib-append \
                    port:gtk3
            configure.args-append \
                    -DwxBUILD_TOOLKIT=gtk2 \
                    -DwxBUILD_TOOLKIT=gtk3
        }
    }
}

variant cxx14 description {build with C++14 instead of C++11} {}
if {[variant_isset cxx14]} {
    compiler.cxx_standard 2014
    configure.args-replace \
                -DwxBUILD_CXX_STANDARD=11 \
                -DwxBUILD_CXX_STANDARD=14
}

default_variants    +compat30

post-destroot {
    set confscript ${wxWidgets.prefix}/lib/wx/config/${wxtype}-unicode-${branch}
    ln -sf ${confscript} ${destroot}${wxWidgets.prefix}/bin/wx-config

    preserve_libraries ${wxWidgets.prefix}/lib "lib*.*.dylib lib*.so.*"
}

variant debug description {add debug info to libraries} {
    configure.args-append   -DwxBUILD_DEBUG_LEVEL=1
}

variant stdlib description {add support for various standard library features} {
    configure.args-append   -DwxUSE_STL=ON \
                            -DwxUSE_STD_CONTAINERS=ON
}

livecheck.regex     {archive/v([0-9.]+).tar.gz}
