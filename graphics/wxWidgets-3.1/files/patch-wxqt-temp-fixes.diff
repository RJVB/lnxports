diff --git a/src/qt/window.cpp b/src/qt/window.cpp
index b82a4e3054fc12ddfea338155fd1561a1e4466ff..a2a066f62fc2a444cad3e12b8f9441d1d07d84fa 100644
--- a/src/qt/window.cpp
+++ b/src/qt/window.cpp
@@ -938,13 +938,16 @@ void wxWindowQt::SetAcceleratorTable( const wxAcceleratorTable& accel )
 {
     wxWindowBase::SetAcceleratorTable( accel );
 
-    // Disable previously set accelerators
-    while ( !m_qtShortcuts->isEmpty() )
-        delete m_qtShortcuts->takeFirst();
+    if ( m_qtShortcuts )
+    {
+        // Disable previously set accelerators
+        while ( !m_qtShortcuts->isEmpty() )
+            delete m_qtShortcuts->takeFirst();
 
-    // Create new shortcuts (use GetHandle() so all events inside
-    // the window are handled, not only in the container subwindow)
-    delete m_qtShortcuts;
+        // Create new shortcuts (use GetHandle() so all events inside
+        // the window are handled, not only in the container subwindow)
+        delete m_qtShortcuts;
+    }
     m_qtShortcuts = accel.ConvertShortcutTable( GetHandle() );
 
     // Connect shortcuts to window
diff --git a/src/qt/radiobox.cpp b/src/qt/radiobox.cpp
index da8c90baa66114e9b286a65bd58737827f3971cd..8b42fa8c8d33e24fd04c8bea04661f928c48ae56 100644
--- a/src/qt/radiobox.cpp
+++ b/src/qt/radiobox.cpp
@@ -135,9 +135,13 @@ bool wxRadioBox::Create(wxWindow *parent,
     m_qtGroupBox->setTitle( wxQtConvertString( title ) );
     m_qtButtonGroup = new wxQtButtonGroup( m_qtGroupBox, this );
 
-    if ( style & wxRA_SPECIFY_ROWS )
+    // provide a default orientation so that m_qtBoxLayout is always initialised!
+    // cf. gtk/radiobox.cpp : default orientation is horizontal
+    // but osx/radiobox_osx.cpp seems to make vertical default
+    // going with the latter, closer to the original code.
+    if (HasFlag(wxRA_SPECIFY_ROWS))
         m_qtBoxLayout = new QHBoxLayout;
-    else if ( style & wxRA_SPECIFY_COLS )
+    else
         m_qtBoxLayout = new QVBoxLayout;
 
     AddChoices< QRadioButton >( m_qtButtonGroup, m_qtBoxLayout, n, choices );
