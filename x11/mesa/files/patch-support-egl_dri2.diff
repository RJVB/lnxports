diff --git a/src/egl/drivers/dri2/egl_dri2.c b/src/egl/drivers/dri2/egl_dri2.c
index 4f226b271263794392de17044376314910098feb..6d9231911e6945e178a7ada099e49f73d7a36bab 100644
--- a/src/egl/drivers/dri2/egl_dri2.c
+++ b/src/egl/drivers/dri2/egl_dri2.c
@@ -65,6 +65,12 @@
 #include "util/u_vector.h"
 #include "mapi/glapi/glapi.h"
 
+#ifdef __MACH__
+#include <mach/mach.h>
+#include <mach/mach_time.h>
+#include <sys/sysctl.h>
+#endif
+
 #define NUM_ATTRIBS 12
 
 static void
@@ -2991,8 +2997,10 @@ dri2_create_sync(_EGLDriver *drv, _EGLDisplay *dpy,
          return NULL;
       }
 
+#ifndef __MACH__
       /* change clock attribute to CLOCK_MONOTONIC */
       ret = pthread_condattr_setclock(&attr, CLOCK_MONOTONIC);
+#endif
 
       if (ret) {
          _eglError(EGL_BAD_ACCESS, "eglCreateSyncKHR");
@@ -3149,9 +3157,21 @@ dri2_client_wait_sync(_EGLDriver *drv, _EGLDisplay *dpy, _EGLSync *sync,
             struct timespec current;
             struct timespec expire;
 
+#ifndef __MACH__
             /* We override the clock to monotonic when creating the condition
              * variable. */
             clock_gettime(CLOCK_MONOTONIC, &current);
+#else
+          static int calibrated = 0;
+          static mach_timebase_info_data_t sTimebaseInfo;
+          if (!calibrated) {
+              mach_timebase_info(&sTimebaseInfo);
+              calibrated = 1;
+          }
+          unsigned long long now = mach_absolute_time() * sTimebaseInfo.numer / sTimebaseInfo.denom;
+          current.tv_sec = now / 1000000000;
+          current.tv_nsec = now % 1000000000;
+#endif
 
             /* calculating when to expire */
             expire.tv_nsec = timeout % 1000000000L;
